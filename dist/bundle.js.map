{"version":3,"sources":["webpack:///webpack/bootstrap 06660890453f9f818c30","webpack:///./src/index.ts","webpack:///./src/geom.ts"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DA,oCAA+B;AAK/B,MAAM,YAAY,GAAG;;;;;;;wBAOG;AACxB,MAAM,aAAa,GAAG;;;;;;OAMf;AAEP,kBAAkB,CAAY;IAC1B,MAAM,KAAK,GAAa,CAAC,YAAY,CAAC;IAEtC,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;IAChC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;QAChB,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG;QAC5B,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG;QAC5B,KAAK,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC,CAAC,GAAG,uBAAuB,CAAC;IACnH,CAAC,CAAC;IAEF,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC;IAEzB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3B,CAAC;AAED;IACI,IAAI,CAAC,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IACtD,IAAI,CAAC,GAAW,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC;IACtD,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACzB,CAAC;AAED,qBAAqB,SAAmB;IACpC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE;IAEnB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAExB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;QAC5B,IAAI,CAAC,aAAa,CAAC,CAAC,EAAE,UAAU,EAAE,CAAC;IACvC,CAAC;IAGD,EAAE,CAAC,CAAC,SAAS,IAAI,UAAU,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACrB,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,IAAI,QAAQ,CAAC,CAAC,CAAC;QAC/B,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IACrB,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,IAAI,MAAM,CAAC,CAAC,CAAC;QAC7B,aAAa;IACjB,CAAC;IAED,MAAM,CAAC,CAAC;AACZ,CAAC;AAED,IAAI,QAA6B;AACjC,IAAI,YAAgC;AAEpC,2BAA8C,EAAS;IACnD,UAAU,CAA+B,IAAK,CAAC,KAAK,CAAC;AACzD,CAAC;AAED,IAAI,OAAsB,CAAC;AAC3B,IAAI,UAAiC,CAAC;AACtC,IAAI,WAAW,GAAmB,IAAI,CAAC;AACvC,IAAI,WAAW,GAAmB,IAAI,CAAC;AACvC,IAAI,SAAgC,CAAC;AAErC,oBAAoB,QAAkB;IAClC,EAAE,CAAC,CAAC,YAAY,IAAI,QAAQ,IAAI,YAAY,CAAC,CAAC,CAAC;QAC3C,MAAM;IACV,CAAC;IACD,YAAY,GAAa,QAAQ;IACjC,QAAQ,GAAG,WAAW,CAAC,YAAY,CAAC;IACpC,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAAE;IAClD,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC;IAEtC,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,UAAU,CAA0B;IAEtE,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,gBAAgB,CAAC;IAEnD,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAwB;IAC1E,SAAS,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAwB;IAExE,WAAW,GAAG,IAAI;IAClB,WAAW,GAAG,IAAI;IAClB,gBAAgB,GAAG,IAAI;IACvB,aAAa,GAAG,IAAI;AACxB,CAAC;AAED,yBAAyB,GAAe;IACpC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACX,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACzB,CAAC;IACD,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO;IACnB,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO;IACnB,IAAI,EAAE,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC,OAAO,EAAE;IACzC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAC,CAAC,EAAE,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,EAAE,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,EAAE;AAC7F,CAAC;AAED,IAAI,gBAAgB,GAAmB,IAAI;AAC3C,IAAI,aAAa,GAAwB,IAAI;AAE7C;IACI,EAAE,CAAC,CAAC,gBAAgB,KAAK,IAAI,IAAI,WAAW,KAAK,IAAI,IAAI,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;QAC5E,MAAM;IACV,CAAC;IACD,EAAE,CAAC,CAAC,YAAY,IAAI,WAAW,CAAC,CAAC,CAAC;QAC9B,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,EAAE,WAAW,CAAC;IACjF,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,IAAI,UAAU,CAAC,CAAC,CAAC;QACpC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,IAAI,EAAE,WAAW,EAAE,WAAW,CAAC;IAC7F,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,YAAY,IAAI,YAAY,CAAC,CAAC,CAAC;QACtC,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,IAAI,EAAE,WAAW,CAAC;IAClF,CAAC;IACD,QAAQ,EAAE;AACd,CAAC;AAED,0BAA6C,EAAS;IAClD,MAAM,GAAG,GAAe,EAAE;IAC1B,EAAE,CAAC,CAAC,WAAW,KAAK,IAAI,IAAI,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;QAC/C,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC;QAClC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACX,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,WAAW,CAAC;QAC7D,CAAC;QACD,WAAW,GAAG,IAAI;QAClB,aAAa,GAAG,IAAI;IACxB,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC;QAClC,EAAE,CAAC,CAAC,gBAAgB,KAAK,IAAI,CAAC,CAAC,CAAC;YAC5B,UAAU,EAAE;QAChB,CAAC;IACL,CAAC;IACD,SAAS,EAAE;IACX,QAAQ,EAAE;AACd,CAAC;AAED,kBAAkB,IAAe;IAC7B,MAAM,CAAC,GAAc,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG;IACzC,MAAM,KAAK,GAAa,CAAC,+BAA+B,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IAC3E,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAgB,EAAE,EAAE;QACtD,MAAM,CAAC,GAAc,CAAC,CAAC,MAAM,CAAC,GAAG;QACjC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC,CAAC;IACF,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;IACjB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;AACzB,CAAC;AAED;IACI,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;QACb,MAAM;IACV,CAAC;IACD,IAAI,KAAK,GAAa,EAAE;IACxB,EAAE,CAAC,CAAC,gBAAgB,KAAK,IAAI,CAAC,CAAC,CAAC;QAC5B,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;IAC1C,CAAC;IACD,EAAE,CAAC,CAAC,aAAa,KAAK,IAAI,CAAC,CAAC,CAAC;QACzB,MAAM,QAAQ,GAAG,aAAa,CAAC,IAAI;QACnC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE;YACnB,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC;gBAC9B,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG;gBACvB,MAAM,EAAE,GAAG,CAAC,CAAC,MAAM,CAAC,GAAG;gBACvB,KAAK,CAAC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC,CAAC,GAAG,QAAQ,GAAG,EAAE,CAAC,CAAC,GAAG,uBAAuB,CAAC;gBAC/G,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAChC,CAAC;QACL,CAAC,CAAC;QACF,MAAM,eAAe,GAAG,aAAa,CAAC,YAAY;QAClD,KAAK,CAAC,IAAI,CAAC,yDAAyD,GAAG,QAAQ,CAAC,MAAM,GAAG,uBAAuB,GAAG,eAAe,GAAG,SAAS,CAAC;IACnJ,CAAC;IACD,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;AAC1C,CAAC;AAED;IACI,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;QACd,MAAM;IACV,CAAC;IACD,IAAI,KAAK,GAAa,EAAE;IACxB,EAAE,CAAC,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;QACvB,KAAK,CAAC,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,CAAC,GAAG,QAAQ,GAAG,WAAW,CAAC,CAAC,GAAG,6BAA6B,CAAC;QACrG,EAAE,CAAC,CAAC,WAAW,KAAK,IAAI,CAAC,CAAC,CAAC;YACvB,KAAK,CAAC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC,CAAC,GAAG,QAAQ,GAAG,WAAW,CAAC,CAAC,GAAG,QAAQ,GAAG,WAAW,CAAC,CAAC,GAAG,QAAQ,GAAG,WAAW,CAAC,CAAC,GAAG,8CAA8C,CAAC;QAC9K,CAAC;IACL,CAAC;IACD,UAAU,CAAC,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;AAC3C,CAAC;AAED,IAAI,YAAgC;AAEpC,2BAA8C,EAAS;IACnD,UAAU,CAA+B,IAAK,CAAC,KAAK,CAAC;AACzD,CAAC;AAED,oBAAoB,QAAkB;IAClC,EAAE,CAAC,CAAC,YAAY,IAAI,QAAQ,IAAI,YAAY,CAAC,CAAC,CAAC;QAC3C,MAAM;IACV,CAAC;IACD,YAAY,GAAa,QAAQ;IACjC,UAAU,EAAE;AAChB,CAAC;AAED,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAE,CAAC,gBAAgB,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;AACtF,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAE,CAAC,gBAAgB,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;AAEtF,UAAU,CAA+B,CAAC,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAE,CAAE,CAAC,KAAK,CAAC,CAAC;AAC3F,UAAU,CAA+B,CAAC,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAE,CAAE,CAAC,KAAK,CAAC,CAAC;;;;;;;;;;AC5L3F;IACI,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAY;IAChD,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAY;IAChD,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAY;IAChD,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,GAAG,EAAE,EAAY;IAChD,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAc;IAC7D,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAc;IAC7D,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAc;IAC7D,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,EAAE,EAAc;IAC7D,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAU,CAAC;IAAC,CAAC,CAAC,IAAI,GAAG,EAAE;IACzC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAU,CAAC;IAAC,CAAC,CAAC,IAAI,GAAG,EAAE;IACzC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAU,CAAC;IAAC,CAAC,CAAC,IAAI,GAAG,EAAE;IACzC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAU,CAAC;IAAC,CAAC,CAAC,IAAI,GAAG,EAAE;IACzC,EAAE,CAAC,QAAQ,GAAG,CAAC,CAAC;IAAC,EAAE,CAAC,QAAQ,GAAG,CAAC,CAAC;IAAC,EAAE,CAAC,QAAQ,GAAG,CAAC,CAAC;IAAC,EAAE,CAAC,QAAQ,GAAG,CAAC;IAClE,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAC9C,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAC9C,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,EAAU;IAC3B,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IAAC,CAAC,CAAC,IAAI,GAAG,CAAC;IAC9C,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,CAAC,EAAU;IAC5B,MAAM,CAAC,CAAC;AACZ,CAAC;AApBD,oBAoBC;AAED,gBAAuB,CAAO,EAAE,CAAO,EAAE,CAAO;IAC5C,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC;AAFD,wBAEC;AAED,kBAAyB,CAAO,EAAE,CAAO,EAAE,CAAO,EAAE,CAAO;IACvD,IAAI,EAAE,GAAS,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1B,IAAI,EAAE,GAAS,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1B,IAAI,EAAE,GAAS,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC1B,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;AACnM,CAAC;AALD,4BAKC;AAED,2BAAkC,CAAO,EAAE,CAAO;IAC9C,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC;AACpC,CAAC;AAFD,8CAEC;AAED,4BAAmC,CAAO,EAAE,CAAO;IAC/C,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC;AACrC,CAAC;AAFD,gDAEC;AAED,iBAAwB,CAAO,EAAE,CAAO;IACpC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC;AACrC,CAAC;AAFD,0BAEC;AAED,kBAAyB,EAAQ,EAAE,EAAQ;IACvC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;AACvC,CAAC;AAFD,4BAEC;AAED,0BAAiC,CAAO,EAAE,CAAO;IAC7C,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC;AACpC,CAAC;AAFD,4CAEC;AAED,2BAAkC,CAAO,EAAE,CAAO;IAC9C,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC;AACrC,CAAC;AAFD,8CAEC;AAED,cAAqB,CAAW;IAC5B,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE;AACjD,CAAC;AAFD,oBAEC;AAED,+BAAsC,CAAO,EAAE,GAAS;IACpD,MAAM,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;AACtC,CAAC;AAFD,sDAEC;AAED,qBAA4B,CAAO;IAC/B,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;AAC9B,CAAC;AAFD,kCAEC;AAED,sBAA6B,CAAO;IAChC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;AAC9B,CAAC;AAFD,oCAEC;AAED,cAAqB,CAAO,EAAE,CAAO;IACjC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;AACzC,CAAC;AAFD,oBAEC;AAED,eAAsB,CAAO,EAAE,CAAO;IAClC,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;AACzC,CAAC;AAFD,sBAEC;AAED,8BAAqC,EAAY;IAC7C,IAAI,EAAE,GAAa,EAAE,CAAC,IAAI;IAC1B,MAAM,CAAC,qBAAqB,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;AAClG,CAAC;AAHD,oDAGC;AAED,wBAA+B,EAAY;IACvC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI;IAChB,EAAE,CAAC,MAAM,GAAG,iBAAiB,CAAC,qBAAqB,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC;AACxI,CAAC;AAHD,wCAGC;AAED,2BAAkC,CAAO;IACrC,IAAI,OAAO,GAAkB,IAAI,GAAG,EAAE,CAAC;IACvC,IAAI,OAAO,GAAe,EAAE,CAAC;IAC7B,IAAI,KAAK,GAAG,CAAC,CAAW,EAAE,EAAE;QACxB,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;YACd,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;gBACpB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;YACvB,CAAC;QACL,CAAC;IACL,CAAC;IACD,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;IACd,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACxB,IAAI,CAAC,GAAa,OAAO,CAAC,GAAG,EAAG,CAAC;QACjC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IACjB,CAAC;IACD,MAAM,CAAC,OAAO;AAClB,CAAC;AAnBD,8CAmBC;AAED,sBAA6B,CAAO;IAChC,IAAI,OAAO,GAAc,IAAI,GAAG,EAAE,CAAC;IACnC,IAAI,OAAO,GAAe,EAAE,CAAC;IAC7B,IAAI,KAAK,GAAG,CAAC,CAAW,EAAE,EAAE;QACxB,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACvB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACf,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACT,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;YACxB,CAAC;YACD,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;QACvB,CAAC;IACL,CAAC;IACD,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;IACd,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACxB,IAAI,CAAC,GAAa,OAAO,CAAC,GAAG,EAAG,CAAC;QACjC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IACjB,CAAC;IACD,MAAM,CAAC,OAAO;AAClB,CAAC;AAlBD,oCAkBC;AAED,sBAA6B,CAAO;IAChC,IAAI,OAAO,GAAc,IAAI,GAAG,EAAE,CAAC;IACnC,IAAI,OAAO,GAAW,EAAE,CAAC;IACzB,IAAI,KAAK,GAAG,CAAC,CAAO,EAAE,EAAE;QACpB,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;QACf,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IAClB,CAAC;IACD,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC;IACnB,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACxB,IAAI,CAAC,GAAS,OAAO,CAAC,GAAG,EAAG,CAAC;QAC7B,IAAI,CAAC,GAAa,CAAC,CAAC,IAAI,CAAC;QACzB,IAAI,EAAE,GAAG,CAAC;QACV,GAAG,CAAC;YACA,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACxC,KAAK,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC;YACvB,CAAC;YACD,EAAE,GAAG,EAAE,CAAC,IAAI;QAChB,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAC;IACtB,CAAC;IACD,MAAM,CAAC,OAAO,CAAC;AACnB,CAAC;AApBD,oCAoBC;AAED,2BAAkC,CAAO;IACrC,IAAI,KAAK,GAAe,EAAE;IAC1B,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI;IACd,IAAI,EAAE,GAAG,CAAC;IACV,GAAG,CAAC;QACA,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC;QACd,EAAE,GAAG,EAAE,CAAC,IAAI;IAChB,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAC;IAClB,MAAM,CAAC,KAAK;AAChB,CAAC;AATD,8CASC;AAED,0BAAiC,CAAO;IACpC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,gBAAgB,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;AAC3D,CAAC;AAFD,4CAEC;AAED,qBAA4B,CAAW;IACnC,0BAA0B;IAC1B,0BAA0B;IAC1B,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAK,CAAC,IAAI;IAC1B,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAK,CAAC,IAAI;IAC1B,CAAC,CAAC,IAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI;IAC1B,CAAC,CAAC,IAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI;IAC1B,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAK,CAAC,IAAI;IAC1B,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAK,CAAC,IAAI;IAC1B,CAAC,CAAC,IAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI;IAC1B,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAAC,QAAQ,CAAC,CAAC,CAAC,IAAK,CAAC,IAAI,CAAC;AAC5C,CAAC;AAXD,kCAWC;AAED,wBAA+B,CAAW;IACtC,IAAI,EAAE,GAAa,CAAC,CAAC,IAAI;IACzB,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC;AACnD,CAAC;AAHD,wCAGC;AAED,0BAAiC,CAAO;IACpC,IAAI,CAAC,GAAa,CAAC,CAAC,IAAI;IACxB,IAAI,EAAE,GAAa,CAAC,CAAC,IAAI;IACzB,OAAO,EAAE,CAAC,IAAI,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;QACxB,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,CAAC;YACxB,CAAC,GAAG,CAAC,CAAC,IAAI;QACd,CAAC;QACD,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC;QACf,EAAE,GAAG,CAAC,CAAC,IAAI;IACf,CAAC;AACL,CAAC;AAVD,4CAUC;AAED,kBAAkB,CAAW;IACzB,cAAc,CAAC,CAAC,CAAC;IACjB,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC;AAC1B,CAAC;AAED,kBAAyB,CAAW;IAChC,kCAAkC;IAClC,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI;IACf,IAAI,EAAE,GAAa,EAAE,MAAM,EAAE,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAc;IACzF,IAAI,GAAG,GAAa,EAAE,MAAM,EAAE,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAc;IAC7H,IAAI,GAAG,GAAS,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;IAAC,EAAE,CAAC,IAAI,GAAG,GAAG,CAAC;IAAC,GAAG,CAAC,IAAI,GAAG,GAAG;IAC3D,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;IAAC,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;IAAC,EAAE,CAAC,IAAI,GAAG,GAAG;IACpD,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;IAAC,EAAE,CAAC,IAAI,GAAG,EAAE;IACzB,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,EAAU;IAC7B,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG;IACjB,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;IAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;IAAC,EAAE,CAAC,IAAI,GAAG,EAAE;IACvC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAAC,QAAQ,CAAC,GAAG,CAAC;IAC3B,MAAM,CAAC,GAAG;AACd,CAAC;AAbD,4BAaC;AAED,mBAA0B,CAAW,EAAE,CAAO;IAC1C,mFAAmF;IACnF,IAAI,CAAC,GAAW,EAAE,GAAG,EAAE,CAAC,EAAY;IACpC,IAAI,EAAE,GAAa,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAc;IACvE,IAAI,EAAE,GAAa,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAc;IACjF,EAAE,CAAC,IAAI,GAAG,EAAE;IACZ,CAAC,CAAC,QAAQ,GAAG,EAAE;IACf,IAAI,GAAG,GAAa,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAc;IACrG,EAAE,CAAC,IAAI,GAAG,GAAG;IACb,IAAI,GAAG,GAAa,EAAE,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,EAAc;IAChH,GAAG,CAAC,IAAI,GAAG,GAAG;IACd,EAAE,CAAC,IAAI,GAAG,GAAG;IACb,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG;IACjB,IAAI,GAAG,GAAS,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;IAAC,EAAE,CAAC,IAAI,GAAG,GAAG,CAAC;IAAC,GAAG,CAAC,IAAI,GAAG,GAAG;IAC3D,IAAI,GAAG,GAAS,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC;IAAC,EAAE,CAAC,IAAI,GAAG,GAAG,CAAC;IAAC,GAAG,CAAC,IAAI,GAAG,GAAG;IAC3D,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG;IACjB,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,GAAG;IACjB,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;IAAC,CAAC,CAAC,IAAI,GAAG,EAAE;IACxB,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,EAAU;IAC5B,CAAC,CAAC,IAAI,GAAG,EAAE,CAAC;IAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC;IAAC,EAAE,CAAC,IAAI,GAAG,EAAE;IACvC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAAC,QAAQ,CAAC,GAAG,CAAC;IACxD,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC;IAC1B,MAAM,CAAC,CAAC;AACZ,CAAC;AAvBD,8BAuBC;AAED,uBAA8B,CAAW;IACrC,2CAA2C;IAC3C,uFAAuF;IACvF,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;WACvD,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;AAClE,CAAC;AALD,sCAKC;AAED,mBAA0B,CAAW;IACjC,qEAAqE;IACrE,IAAI,KAAK,GAAa,CAAC,CAAC,IAAI;IAC5B,WAAW,CAAC,CAAC,CAAC;IACd,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC1B,CAAC;AALD,8BAKC;AAED,uBAA8B,CAAO,EAAE,CAAO;IAC1C,MAAM,CAAC,uBAAuB,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;AAC9C,CAAC;AAFD,sCAEC;AAED,iCAAwC,CAAW,EAAE,CAAO;IACxD,4BAA4B;IAC5B,8CAA8C;IAC9C,IAAI,UAAU,GAAG,CAAC,MAAgB,EAAE,KAAe,EAAU,EAAE;QAC3D,qDAAqD;QACrD,WAAW,CAAC,MAAM,CAAC;QACnB,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;IAC9B,CAAC;IACD,IAAI,CAAC,GAAS,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;IACxB,IAAI,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC;IAAC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;IAAC,IAAI,EAAE,GAAG,EAAE,CAAC,IAAI;IACnD,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,CAAC,EAAE,CAAC,MAAM;IACpB,CAAC;IACD,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,CAAC,EAAE,CAAC,MAAM;IACpB,CAAC;IACD,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,CAAC,EAAE,CAAC,MAAM;IACpB,CAAC;IACD,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC;IAC7B,CAAC;IACD,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC;IAC7B,CAAC;IACD,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC;IAC7B,CAAC;IACD,aAAa;IACb,MAAM,CAAC,SAAS,CAAC,EAAE,EAAE,CAAC,CAAC;AAC3B,CAAC;AA9BD,0DA8BC;AAED,cAAqB,KAAe,EAAE,CAAO;IACzC,IAAI,CAAC,GAAa,KAAK;IACvB,EAAE,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,MAAM,KAAK,CAAC,eAAe,CAAC;QAChC,CAAC;QACD,CAAC,GAAG,CAAC,CAAC,IAAI;IACd,CAAC;IACD,IAAI,EAAE,GAAa,CAAC,CAAC,IAAI;IACzB,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;QACd,EAAE,CAAC,CAAC,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACjC,OAAO,EAAE,CAAC,MAAM,IAAI,iBAAiB,CAAC,oBAAoB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC;gBACjE,EAAE,GAAG,EAAE,CAAC,IAAI;YAChB,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;gBACX,MAAM,KAAK,CAAC,eAAe,CAAC;YAChC,CAAC;YACD,CAAC,GAAG,EAAE,CAAC,IAAI;YACX,EAAE,GAAG,CAAC,CAAC,IAAI;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,GAAG,EAAE,CAAC,IAAI;QAChB,CAAC;IACL,CAAC;IACD,MAAM,CAAC,CAAC,CAAC,IAAI;AACjB,CAAC;AAxBD,oBAwBC;AAED,mBAA0B,CAAO;IAC7B,4BAA4B;IAC5B,oDAAoD;IACpD,IAAI,WAAW,GAAc,YAAY,CAAC,CAAC,CAAC;IAC5C,IAAI,YAAY,GAAW,EAAE;IAC7B,WAAW,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,GAAG,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC;IACtD,IAAI,KAAK,GAAG,CAAC,EAAQ,EAAE,EAAE;QACrB,EAAE,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACvB,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC;YACrB,WAAW,CAAC,GAAG,CAAC,EAAE,CAAC;QACvB,CAAC;IACL,CAAC;IACD,OAAO,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAC7B,IAAI,EAAE,GAAS,YAAY,CAAC,GAAG,EAAG;QAClC,WAAW,CAAC,MAAM,CAAC,EAAE,CAAC;QACtB,IAAI,CAAC,GAAa,EAAE,CAAC,IAAI;QACzB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACZ,QAAQ;QACZ,CAAC;QACD,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;eAC5E,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/F,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACnB,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC;gBAChB,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;gBACtC,KAAK,CAAC,CAAC,CAAC,IAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAAC,KAAK,CAAC,CAAC,CAAC,IAAK,CAAC,IAAI,CAAC,IAAI,CAAC;YACtD,CAAC;QACL,CAAC;IACL,CAAC;AACL,CAAC;AA5BD,8BA4BC;AAED,mBAA0B,CAAO;IAC7B,4BAA4B;IAC5B,4EAA4E;IAE5E,SAAS,CAAC,CAAC,CAAC;IAEZ,IAAI,SAAS,GAAc,YAAY,CAAC,CAAC,CAAC;IAC1C,IAAI,OAAO,GAAW,EAAE;IAExB,IAAI,OAAO,GAAG,CAAC,CAAW,EAAW,EAAE;QACnC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI;eACH,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;eACvD,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC7D,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;YACxB,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;YAC7B,WAAW,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,IAAI;QACf,CAAC;QACD,MAAM,CAAC,KAAK;IAChB,CAAC;IACD,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;IAC7C,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QACxB,IAAI,CAAC,GAAa,OAAO,CAAC,GAAG,EAAG,CAAC,IAAI;QACrC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,QAAQ;QACZ,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACb,QAAQ;QACZ,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,QAAQ;QACZ,CAAC;QACD,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAClB,QAAQ;QACZ,CAAC;IACL,CAAC;AACL,CAAC;AApCD,8BAoCC;AAID,8BAAqC,KAAe,EAAE,CAAO;IACzD,IAAI,KAAK,GAAW,CAAC;IACrB,IAAI,CAAC,GAAa,KAAK;IACvB,IAAI,IAAI,GAAe,CAAC,CAAC,CAAC;IAC1B,EAAE,CAAC,CAAC,EAAE,KAAK,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,MAAM,KAAK,CAAC,eAAe,CAAC;QAChC,CAAC;QACD,CAAC,GAAG,CAAC,CAAC,IAAI;QACV,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAChB,CAAC;IACD,IAAI,EAAE,GAAa,CAAC,CAAC,IAAI;IACzB,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;QACd,EAAE,CAAC,CAAC,EAAE,KAAK,IAAI,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,OAAO,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE,KAAK,IAAI,iBAAiB,CAAC,oBAAoB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC9E,EAAE,GAAG,EAAE,CAAC,IAAI;YAChB,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;gBACX,MAAM,KAAK,CAAC,eAAe,CAAC;YAChC,CAAC;YACD,CAAC,GAAG,EAAE,CAAC,IAAI;YACX,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACZ,EAAE,GAAG,CAAC,CAAC,IAAI;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,GAAG,EAAE,CAAC,IAAI;QAChB,CAAC;IACL,CAAC;IACD,MAAM,CAAC,EAAC,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAC;AAC5C,CAAC;AA5BD,oDA4BC;AAED,+BAAsC,KAAe,EAAE,CAAO;IAC1D,IAAI,KAAK,GAAW,CAAC;IACrB,IAAI,CAAC,GAAa,KAAK;IACvB,IAAI,IAAI,GAAe,CAAC,CAAC,CAAC;IAC1B,EAAE,CAAC,CAAC,EAAE,KAAK,IAAI,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC3C,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,MAAM,KAAK,CAAC,eAAe,CAAC;QAChC,CAAC;QACD,CAAC,GAAG,CAAC,CAAC,IAAI;QACV,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAChB,CAAC;IACD,IAAI,EAAE,GAAa,CAAC,CAAC,IAAI;IACzB,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;QACd,EAAE,CAAC,CAAC,EAAE,KAAK,IAAI,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YAC5C,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;gBACX,MAAM,KAAK,CAAC,eAAe,CAAC;YAChC,CAAC;YACD,CAAC,GAAG,EAAE,CAAC,IAAI;YACX,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACZ,EAAE,GAAG,CAAC,CAAC,IAAI;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,GAAG,EAAE,CAAC,IAAI;QAChB,CAAC;IACL,CAAC;IACD,MAAM,CAAC,EAAC,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAC;AAC5C,CAAC;AAzBD,sDAyBC;AAED,6BAAoC,KAAe,EAAE,EAAQ,EAAE,EAAQ;IACnE,IAAI,KAAK,GAAW,CAAC;IACrB,IAAI,CAAC,GAAa,KAAK;IACvB,IAAI,IAAI,GAAe,CAAC,CAAC,CAAC;IAC1B,IAAI,SAAS,GAAuB,IAAI,GAAG,EAAE;IAC7C,IAAI,YAAY,GAAG,CAAC,CAAS,EAAU,EAAE;QACrC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpB,KAAK,EAAE;YACP,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC;QAC3C,CAAC;QACD,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAE;IAC5B,CAAC;IACD,IAAI,UAAU,GAAG,CAAC,CAAS,EAAW,EAAE;QACpC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC;IAC/B,CAAC;IACD,IAAI,WAAW,GAAG,CAAC,CAAS,EAAW,EAAE;QACrC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC;IAC/B,CAAC;IACD,IAAI,EAAE,GAAa,CAAC;IACpB,GAAG,CAAC;QACA,EAAE,CAAC,CAAC,EAAE,KAAK,IAAI,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7C,OAAO,CAAC,CAAC,WAAW,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC;gBACxD,EAAE,GAAG,EAAE,CAAC,IAAI;YAChB,CAAC;YACD,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;gBACX,MAAM,KAAK,CAAC,eAAe,CAAC;YAChC,CAAC;YACD,CAAC,GAAG,EAAE,CAAC,IAAI;YACX,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACZ,EAAE,GAAG,CAAC,CAAC,IAAI;QACf,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,EAAE,GAAG,EAAE,CAAC,IAAI;QAChB,CAAC;IACL,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAC;IAClB,MAAM,CAAC,EAAC,YAAY,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAC;AAC5C,CAAC;AAnCD,kDAmCC","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 06660890453f9f818c30","import * as Geom from './geom';\n\ntype MeshType = \"Convex\"|\"Thin\"|\"Delaunay\"\ntype WalkType = \"Straight\"|\"Visibility\"|\"Celestial\"\n\nconst svg_preamble = `\n<svg viewBox=\"-210 -210 420 420\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"mesh-svg\">\n    <defs>\n        <marker id=\"arrow-head\" markerWidth=\"10\" markerHeight=\"10\" refX=\"7\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\n            <path d=\"M0,0 L0,6 L9,3 z\" class=\"arrowhead\"/>\n        </marker>\n    </defs>\n    <g id=\"mesh-layer\">`\nconst svg_postamble = `\n    </g>\n    <g id=\"path-layer\">\n    </g>    \n    <g id=\"arrow-layer\">\n    </g>\n</svg>`\n\nfunction mesh2svg(m: Geom.Mesh): string {\n    const lines: [string] = [svg_preamble]\n\n    let edges = Geom.gather_edges(m)\n    edges.forEach((e) => {\n        const p1 = e.half.origin.pos\n        const p2 = e.half.target.pos\n        lines.push('<line x1=\"' + p1.x + '\" y1=\"' + p1.y + '\" x2=\"' + p2.x + '\" y2=\"' + p2.y + '\" class=\"mesh-line\"/>')\n    })\n\n    lines.push(svg_postamble)\n\n    return lines.join(\"\\n\")\n}\n\nfunction random_pos(): Geom.Vec2 {\n    let x: number = Math.floor(Math.random() * 800) - 400;\n    let y: number = Math.floor(Math.random() * 800) - 400;\n    return { x: x, y: y }\n}\n\nfunction random_mesh(mesh_type: MeshType): Geom.Mesh {\n    let m = Geom.mesh()\n\n    Geom.triangulate_mesh(m)\n\n    for (var i = 1; i <= 200; i++) {\n        Geom.insert_vertex(m, random_pos())\n    }\n\n    \n    if (mesh_type == \"Delaunay\") {\n        Geom.delaunafy(m)\n    } else if (mesh_type == \"Convex\") {\n        Geom.convexify(m)\n    } else if (mesh_type == \"Thin\") {\n        // Do nothing\n    }\n\n    return m\n}\n\nlet currMesh: Geom.Mesh|undefined\nlet currMeshType: MeshType|undefined\n\nfunction selectMeshHandler(this: HTMLElement, ev: Event) {\n    selectMesh(<MeshType>(<HTMLSelectElement>this).value)\n}\n\nlet meshSVG: SVGSVGElement;\nlet arrowLayer: SVGGElement|undefined;\nlet arrowOrigin: Geom.Vec2|null = null;\nlet arrowTarget: Geom.Vec2|null = null;\nlet pathLayer: SVGGElement|undefined;\n\nfunction selectMesh(meshType: MeshType) {\n    if (currMeshType && meshType == currMeshType) {\n        return\n    }\n    currMeshType = <MeshType>meshType\n    currMesh = random_mesh(currMeshType)\n    let meshDIV = document.getElementById(\"mesh-div\")!\n    meshDIV.innerHTML = mesh2svg(currMesh)\n\n    meshSVG = document.getElementById(\"mesh-svg\")! as any as SVGSVGElement\n\n    meshSVG.addEventListener(\"click\", meshClickHandler)\n\n    arrowLayer = document.getElementById(\"arrow-layer\")! as any as SVGGElement\n    pathLayer = document.getElementById(\"path-layer\")! as any as SVGGElement\n\n    arrowOrigin = null\n    arrowTarget = null\n    currPathInitFace = null\n    currWalkStats = null\n}\n\nfunction meshSVGEventPos(evt: MouseEvent): Geom.Vec2 {\n    if (!meshSVG) {\n        return { x: 0, y: 0 }\n    }\n    let x = evt.clientX\n    let y = evt.clientY\n    let sm = meshSVG.getScreenCTM().inverse()\n    return { x: Math.round((sm.a * x)+(sm.c*y)+sm.e), y: Math.round((sm.b*x)+(sm.d*y)+sm.f) }\n}\n\nlet currPathInitFace: Geom.Face|null = null\nlet currWalkStats: Geom.WalkStats|null = null\n\nfunction updatePath() {\n    if (currPathInitFace === null || arrowOrigin === null || arrowTarget === null) {\n        return\n    }\n    if (currWalkType == \"Celestial\") {\n        currWalkStats = Geom.celestial_walk_stats(currPathInitFace.some, arrowTarget)\n    } else if (currWalkType == \"Straight\") {\n        currWalkStats = Geom.straight_walk_stats(currPathInitFace.some, arrowOrigin, arrowTarget)\n    } else if (currWalkType == \"Visibility\") {\n        currWalkStats = Geom.visibility_walk_stats(currPathInitFace.some, arrowTarget)\n    }\n    drawPath()\n}\n\nfunction meshClickHandler(this: HTMLElement, ev: Event) {\n    const mev = <MouseEvent>ev\n    if (arrowOrigin === null || arrowTarget !== null) {\n        arrowOrigin = meshSVGEventPos(mev)\n        if (currMesh) {\n            currPathInitFace = Geom.walk(currMesh.north, arrowOrigin)\n        }\n        arrowTarget = null\n        currWalkStats = null\n    } else {\n        arrowTarget = meshSVGEventPos(mev)\n        if (currPathInitFace !== null) {\n            updatePath()\n        }\n    }\n    drawArrow()\n    drawPath()\n}\n\nfunction face2svg(face: Geom.Face): string {\n    const p: Geom.Vec2 = face.some.origin.pos\n    const words: [string] = ['<path class=\"path-face\" d=\"M ' + p.x + ' ' + p.y]\n    Geom.gather_face_edges(face).forEach((e: Geom.HalfEdge) => {\n        const p: Geom.Vec2 = e.target.pos\n        words.push(\" L \" + p.x + \" \" + p.y)\n    })\n    words.push('\"/>')\n    return words.join(\"\")\n}\n\nfunction drawPath() {\n    if (!pathLayer) {\n        return\n    }\n    let lines: string[] = []\n    if (currPathInitFace !== null) {\n        lines.push(face2svg(currPathInitFace))\n    }\n    if (currWalkStats !== null) {\n        const currPath = currWalkStats.path\n        currPath.forEach((e) => {\n            if (e.left !== currPathInitFace) {\n                const p1 = e.origin.pos\n                const p2 = e.target.pos\n                lines.push('<line x1=\"' + p1.x + '\" y1=\"' + p1.y + '\" x2=\"' + p2.x + '\" y2=\"' + p2.y + '\" class=\"path-edge\"/>')\n                lines.push(face2svg(e.left))\n            }\n        })\n        const currOrientTests = currWalkStats.orient_tests\n        lines.push('<text x=\"-180\" y=\"-180\" class=\"path-stats-text\">faces: ' + currPath.length + ', orientation tests: ' + currOrientTests + \"</text>\")\n    }\n    pathLayer.innerHTML = lines.join(\"\\n\")\n}\n\nfunction drawArrow() {\n    if (!arrowLayer) {\n        return\n    }\n    let lines: string[] = []\n    if (arrowOrigin !== null) {\n        lines.push('<circle cx=\"' + arrowOrigin.x + '\" cy=\"' + arrowOrigin.y + '\" r=\"5\" id=\"arrow-origin\"/>')\n        if (arrowTarget !== null) {\n            lines.push('<line x1=\"' + arrowOrigin.x + '\" y1=\"' + arrowOrigin.y + '\" x2=\"' + arrowTarget.x + '\" y2=\"' + arrowTarget.y + '\" id=\"arrow\" marker-end=\"url(#arrow-head)\"/>')\n        }\n    }\n    arrowLayer.innerHTML = lines.join(\"\\n\")\n}\n\nlet currWalkType: WalkType|undefined\n\nfunction selectWalkHandler(this: HTMLElement, ev: Event) {\n    selectWalk(<WalkType>(<HTMLSelectElement>this).value)\n}\n\nfunction selectWalk(walkType: WalkType) {\n    if (currWalkType && walkType == currWalkType) {\n        return\n    }\n    currWalkType = <WalkType>walkType\n    updatePath()\n}\n\ndocument.getElementById(\"select-mesh\")!.addEventListener(\"change\", selectMeshHandler);\ndocument.getElementById(\"select-walk\")!.addEventListener(\"change\", selectWalkHandler);\n\nselectMesh(<MeshType>(<HTMLSelectElement>(document.getElementById(\"select-mesh\")!)).value);\nselectWalk(<WalkType>(<HTMLSelectElement>(document.getElementById(\"select-walk\")!)).value);\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","export type Vec2 = { x: number, y: number }\n\nexport type Line = { p1: Vec2, p2: Vec2 }\n\nexport type HalfEdge = {\n    origin: Vertex,\n    target: Vertex,\n    next: HalfEdge,\n    prev: HalfEdge,\n    left: Face,\n    edge: Edge,\n    twin?: HalfEdge\n    obtuse: boolean\n}\n\nexport type Edge = { half: HalfEdge }\n\nexport type Mesh = { north: HalfEdge }\n\nexport type Vertex = { pos: Vec2, outgoing: HalfEdge }\n\nexport type Face = { some: HalfEdge }\n\nexport function mesh(): Mesh {\n    let nw = { pos: { x: -402, y: +402 } } as Vertex\n    let ne = { pos: { x: +402, y: +402 } } as Vertex\n    let se = { pos: { x: +402, y: -402 } } as Vertex\n    let sw = { pos: { x: -402, y: -402 } } as Vertex\n    let n = { obtuse: false, origin: ne, target: nw } as HalfEdge\n    let e = { obtuse: false, origin: se, target: ne } as HalfEdge\n    let s = { obtuse: false, origin: sw, target: se } as HalfEdge\n    let w = { obtuse: false, origin: nw, target: sw } as HalfEdge\n    let nn = { half: n } as Edge; n.edge = nn\n    let ee = { half: e } as Edge; e.edge = ee\n    let ss = { half: s } as Edge; s.edge = ss\n    let ww = { half: w } as Edge; w.edge = ww\n    ne.outgoing = n; nw.outgoing = w; sw.outgoing = s; se.outgoing = e\n    e.next = n; s.next = e; w.next = s; n.next = w\n    n.prev = e; e.prev = s; s.prev = w; w.prev = n\n    let f = { some: n } as Face\n    n.left = f; e.left = f; s.left = f; w.left = f\n    let m = { north: n } as Mesh\n    return m\n}\n\nexport function orient(p: Vec2, q: Vec2, r: Vec2): number {\n    return ((q.x - p.x) * (r.y - p.y) - (q.y - p.y) * (r.x - p.x))\n}\n\nexport function incircle(a: Vec2, b: Vec2, c: Vec2, d: Vec2): boolean {\n    let ad: Vec2 = minus(a, d)\n    let bd: Vec2 = minus(b, d)\n    let cd: Vec2 = minus(c, d)\n    return ((ad.x * ad.x + ad.y * ad.y) * (bd.x * cd.y - cd.x * bd.y) + (bd.x * bd.x + bd.y * bd.y) * (cd.x * ad.y - ad.x * cd.y) + (cd.x * cd.x + cd.y * cd.y) * (ad.x * bd.y - bd.x * ad.y)) > 0;\n}\n\nexport function strictly_right_of(l: Line, p: Vec2): boolean {\n    return orient(l.p1, l.p2, p) < 0\n}\n\nexport function right_or_on_top_of(l: Line, p: Vec2): boolean {\n    return orient(l.p1, l.p2, p) <= 0\n}\n\nexport function on_line(l: Line, p: Vec2): boolean {\n    return orient(l.p1, l.p2, p) == 0\n}\n\nexport function on_point(p1: Vec2, p2: Vec2) {\n    return p1.x == p2.x && p1.y == p2.y\n}\n\nexport function strictly_left_of(l: Line, p: Vec2): boolean {\n    return orient(l.p1, l.p2, p) > 0\n}\n\nexport function left_or_on_top_of(l: Line, p: Vec2): boolean {\n    return orient(l.p1, l.p2, p) >= 0\n}\n\nexport function line(e: HalfEdge): Line {\n    return { p1: e.origin.pos, p2: e.target.pos }\n}\n\nexport function line_by_point_and_dir(p: Vec2, dir: Vec2): Line {\n    return { p1: p, p2: plus(p, dir) }\n}\n\nexport function rotate_left(v: Vec2): Vec2 {\n    return { x: -v.y, y: v.x }\n}\n\nexport function rotate_right(v: Vec2): Vec2 {\n    return { x: v.y, y: -v.x }\n}\n\nexport function plus(a: Vec2, b: Vec2): Vec2 {\n    return { x: a.x + b.x, y: a.y + b.y }\n}\n\nexport function minus(a: Vec2, b: Vec2): Vec2 {\n    return { x: a.x - b.x, y: a.y - b.y }\n}\n\nexport function approx_bisector_next(e2: HalfEdge): Line {\n    let e3: HalfEdge = e2.next\n    return line_by_point_and_dir(e2.target.pos, rotate_right(minus(e3.target.pos, e2.origin.pos)))\n}\n\nexport function set_obtuseness(e2: HalfEdge) {\n    let e3 = e2.next\n    e2.obtuse = strictly_right_of(line_by_point_and_dir(e2.target.pos, rotate_left(minus(e2.target.pos, e2.origin.pos))), e3.target.pos)\n}\n\nexport function gather_half_edges(m: Mesh): Set<HalfEdge> {\n    let visited: Set<HalfEdge> = new Set();\n    let waiting: HalfEdge[] = [];\n    let queue = (e: HalfEdge) => {\n        if (!visited.has(e)) {\n            waiting.push(e)\n            visited.add(e)\n            if (e.twin) {\n                waiting.push(e.twin)\n                visited.add(e.twin)\n            }\n        }\n    }\n    queue(m.north)\n    while (waiting.length > 0) {\n        let e: HalfEdge = waiting.pop()!;\n        queue(e.next)\n    }\n    return visited\n}\n\nexport function gather_edges(m: Mesh): Set<Edge> {\n    let visited: Set<Edge> = new Set();\n    let waiting: HalfEdge[] = [];\n    let queue = (e: HalfEdge) => {\n        if (!visited.has(e.edge)) {\n            waiting.push(e)\n            if (e.twin) {\n                waiting.push(e.twin)\n            }\n            visited.add(e.edge)\n        }\n    }\n    queue(m.north)\n    while (waiting.length > 0) {\n        let e: HalfEdge = waiting.pop()!;\n        queue(e.next)\n    }\n    return visited\n}\n\nexport function gather_faces(m: Mesh): Set<Face> {\n    let visited: Set<Face> = new Set();\n    let waiting: Face[] = [];\n    let queue = (f: Face) => {\n        waiting.push(f)\n        visited.add(f)\n    }\n    queue(m.north.left)\n    while (waiting.length > 0) {\n        let f: Face = waiting.pop()!;\n        let e: HalfEdge = f.some;\n        let e2 = e\n        do {\n            if (e2.twin && !visited.has(e2.twin.left)) {\n                queue(e2.twin.left)\n            }\n            e2 = e2.next\n        } while (e2 !== e)\n    }\n    return visited;\n}\n\nexport function gather_face_edges(f: Face) {\n    let edges: HalfEdge[] = []\n    let e = f.some\n    let e2 = e\n    do {\n        edges.push(e2)\n        e2 = e2.next\n    } while (e2 !== e)\n    return edges\n}\n\nexport function triangulate_mesh(m: Mesh) {\n    gather_faces(m).forEach((f) => { triangulate_face(f) })\n}\n\nexport function delete_edge(e: HalfEdge) {\n    // e.twin must be defined \n    // e.left must be triangle\n    e.prev.left = e.twin!.left\n    e.next.left = e.twin!.left\n    e.twin!.prev.next = e.next\n    e.twin!.next.prev = e.prev\n    e.next.prev = e.twin!.prev\n    e.prev.next = e.twin!.next\n    e.twin!.left.some = e.next\n    obtussle(e.prev); obtussle(e.twin!.prev)\n}\n\nexport function kink_left_next(e: HalfEdge): boolean {\n    let e2: HalfEdge = e.next\n    return strictly_left_of(line(e), e2.target.pos)\n}\n\nexport function triangulate_face(f: Face) {\n    let e: HalfEdge = f.some\n    let e2: HalfEdge = e.next\n    while (e2.next !== e.prev) {\n        while (!kink_left_next(e)) {\n            e = e.next\n        }\n        e = cut_peak(e)\n        e2 = e.next\n    }\n}\n\nfunction obtussle(e: HalfEdge) {\n    set_obtuseness(e)\n    set_obtuseness(e.prev)\n}\n\nexport function cut_peak(e: HalfEdge): HalfEdge {\n    // angle(e, e.next) must kink left\n    let e2 = e.next\n    let e3: HalfEdge = { origin: e2.target, target: e.origin, prev: e2, next: e } as HalfEdge\n    let e3i: HalfEdge = { origin: e3.target, target: e3.origin, prev: e.prev, next: e2.next, twin: e3, left: e.left } as HalfEdge\n    let ee3: Edge = { half: e3 }; e3.edge = ee3; e3i.edge = ee3\n    e.prev.next = e3i; e2.next.prev = e3i; e3.twin = e3i\n    e.prev = e3; e2.next = e3\n    let ff = { some: e3 } as Face\n    e.left.some = e3i\n    e.left = ff; e2.left = ff; e3.left = ff\n    obtussle(e3); obtussle(e3i)\n    return e3i\n}\n\nexport function grow_edge(e: HalfEdge, p: Vec2) {\n    // p must be in e.left, (e.origin, p) and (e.target, p) must not intersect anything\n    let v: Vertex = { pos: p } as Vertex\n    let e2: HalfEdge = { origin: e.target, target: v, prev: e } as HalfEdge\n    let e3: HalfEdge = { origin: v, target: e.origin, prev: e2, next: e } as HalfEdge\n    e2.next = e3\n    v.outgoing = e3\n    let e2i: HalfEdge = { origin: v, target: e.target, next: e.next, left: e.left, twin: e2 } as HalfEdge\n    e2.twin = e2i\n    let e3i: HalfEdge = { origin: e.origin, target: v, prev: e.prev, next: e2i, left: e.left, twin: e3 } as HalfEdge\n    e2i.prev = e3i\n    e3.twin = e3i\n    e.left.some = e3i\n    let ee2: Edge = { half: e2 }; e2.edge = ee2; e2i.edge = ee2\n    let ee3: Edge = { half: e3 }; e3.edge = ee3; e3i.edge = ee3\n    e.next.prev = e2i\n    e.prev.next = e3i\n    e.next = e2; e.prev = e3\n    let ff = { some: e } as Face\n    e.left = ff; e2.left = ff; e3.left = ff\n    obtussle(e2); obtussle(e3); obtussle(e2i); obtussle(e3i)\n    triangulate_face(e3i.left)\n    return v\n}\n\nexport function flipable_edge(e: HalfEdge): boolean {\n    // e.left and e.twin.left must be triangles\n    // returns true iff e is the diagonal of a convex quadrilateral with no co-linear sides\n    return strictly_left_of(line(e.twin!.prev), e.next.target.pos)\n        && strictly_left_of(line(e.twin!.next), e.next.target.pos)\n}\n\nexport function flip_edge(e: HalfEdge): HalfEdge {\n    // e must be diagonal of convex quadrilateral with no co-linear sides\n    let eprev: HalfEdge = e.prev\n    delete_edge(e)\n    return cut_peak(eprev)\n}\n\nexport function insert_vertex(m: Mesh, p: Vec2): Vertex {\n    return insert_vertex_from_edge(m.north, p)\n}\n\nexport function insert_vertex_from_edge(e: HalfEdge, p: Vec2): Vertex {\n    // pre: m must be triangular\n    // post: m will be triangular with vertex at p\n    let split_edge = (esplit: HalfEdge, estay: HalfEdge): Vertex => {\n        // p must be properly on esplit, estay.next == esplit\n        delete_edge(esplit)\n        return grow_edge(estay, p)\n    }\n    let f: Face = walk(e, p)\n    let e1 = f.some; let e2 = e1.next; let e3 = e2.next\n    if (on_point(e1.origin.pos, p)) {\n        return e1.origin\n    }\n    if (on_point(e2.origin.pos, p)) {\n        return e2.origin\n    }\n    if (on_point(e3.origin.pos, p)) {\n        return e3.origin\n    }\n    if (on_line(line(e1), p)) {\n        return split_edge(e1, e3)\n    }\n    if (on_line(line(e2), p)) {\n        return split_edge(e2, e1)\n    }\n    if (on_line(line(e3), p)) {\n        return split_edge(e3, e2)\n    }\n    // split face\n    return grow_edge(e1, p)\n}\n\nexport function walk(einit: HalfEdge, p: Vec2): Face {\n    let e: HalfEdge = einit\n    if (strictly_right_of(line(e), p)) {\n        if (!e.twin) {\n            throw Error(\"out of bounds\")\n        }\n        e = e.twin\n    }\n    let e2: HalfEdge = e.next\n    while (e !== e2) {\n        if (strictly_right_of(line(e2), p)) {\n            while (e2.obtuse && left_or_on_top_of(approx_bisector_next(e2), p)) {\n                e2 = e2.next\n            }\n            if (!e2.twin) {\n                throw Error(\"out of bounds\")\n            }\n            e = e2.twin\n            e2 = e.next\n        } else {\n            e2 = e2.next\n        }\n    }\n    return e.left\n}\n\nexport function delaunafy(m: Mesh) {\n    // pre: m must be triangular\n    // post: m will be triangular and maximally delaunay\n    let waiting_set: Set<Edge> = gather_edges(m)\n    let waiting_list: Edge[] = []\n    waiting_set.forEach((ee) => { waiting_list.push(ee) })\n    let queue = (ee: Edge) => {\n        if (!waiting_set.has(ee)) {\n            waiting_list.push(ee)\n            waiting_set.add(ee)\n        }\n    }\n    while (waiting_list.length > 0) {\n        let ee: Edge = waiting_list.pop()!\n        waiting_set.delete(ee)\n        let e: HalfEdge = ee.half\n        if (!(e.twin)) {\n            continue\n        }\n        if (incircle(e.origin.pos, e.target.pos, e.next.target.pos, e.twin.next.target.pos)\n            || incircle(e.twin.origin.pos, e.twin.target.pos, e.twin.next.target.pos, e.next.target.pos)) {\n            if (flipable_edge(e)) { // <-- defensive\n                e = flip_edge(e)\n                queue(e.next.edge); queue(e.prev.edge)\n                queue(e.twin!.next.edge); queue(e.twin!.prev.edge)\n            }\n        }\n    }\n}\n\nexport function convexify(m: Mesh) {\n    // pre: m must be triangular\n    // post: m will (almost certainly?) no longer be triangular but still convex\n\n    delaunafy(m)\n\n    let triangles: Set<Face> = gather_faces(m)\n    let waiting: Face[] = []\n\n    let deleted = (e: HalfEdge): boolean => {\n        if (e.twin\n            && left_or_on_top_of(line(e.twin.prev), e.next.target.pos)\n            && left_or_on_top_of(line(e.twin.next), e.next.target.pos)) {\n            triangles.delete(e.left)\n            triangles.delete(e.twin.left)\n            delete_edge(e)\n            return true\n        }\n        return false\n    }\n    triangles.forEach((f) => { waiting.push(f) })\n    while (waiting.length > 0) {\n        let e: HalfEdge = waiting.pop()!.some\n        if (!triangles.has(e.left)) {\n            continue\n        }\n        if (deleted(e)) {\n            continue\n        }\n        if (deleted(e.next)) {\n            continue\n        }\n        if (deleted(e.prev)) {\n            continue\n        }\n    }\n}\n\nexport type WalkStats = { orient_tests: number, path: HalfEdge[] }\n\nexport function celestial_walk_stats(einit: HalfEdge, p: Vec2): WalkStats {\n    let tests: number = 0\n    let e: HalfEdge = einit\n    let path: HalfEdge[] = [e]\n    if (++tests && strictly_right_of(line(e), p)) {\n        if (!e.twin) {\n            throw Error(\"out of bounds\")\n        }\n        e = e.twin\n        path.push(e)\n    }\n    let e2: HalfEdge = e.next\n    while (e !== e2) {\n        if (++tests && strictly_right_of(line(e2), p)) {\n            while (e2.obtuse && (++tests && left_or_on_top_of(approx_bisector_next(e2), p))) {\n                e2 = e2.next\n            }\n            if (!e2.twin) {\n                throw Error(\"out of bounds\")\n            }\n            e = e2.twin\n            path.push(e)\n            e2 = e.next\n        } else {\n            e2 = e2.next\n        }\n    }\n    return {orient_tests: tests, path: path}\n}\n\nexport function visibility_walk_stats(einit: HalfEdge, p: Vec2): WalkStats {\n    let tests: number = 0\n    let e: HalfEdge = einit\n    let path: HalfEdge[] = [e]\n    if (++tests && strictly_right_of(line(e), p)) {\n        if (!e.twin) {\n            throw Error(\"out of bounds\")\n        }\n        e = e.twin\n        path.push(e)\n    }\n    let e2: HalfEdge = e.next\n    while (e !== e2) {\n        if (++tests && strictly_right_of(line(e2), p)) {\n            if (!e2.twin) {\n                throw Error(\"out of bounds\")\n            }\n            e = e2.twin\n            path.push(e)\n            e2 = e.next\n        } else {\n            e2 = e2.next\n        }\n    }\n    return {orient_tests: tests, path: path}\n}\n\nexport function straight_walk_stats(einit: HalfEdge, p1: Vec2, p2: Vec2): WalkStats {\n    let tests: number = 0\n    let e: HalfEdge = einit\n    let path: HalfEdge[] = [e]\n    let orientMap: Map<Vertex,number> = new Map()\n    let vertexOrient = (v: Vertex): number => {\n        if (!orientMap.has(v)) {\n            tests++\n            orientMap.set(v, orient(p1, p2, v.pos)) \n        }\n        return orientMap.get(v)!\n    }\n    let vertexLeft = (v: Vertex): boolean => {\n        return vertexOrient(v) >= 0\n    }\n    let vertexRight = (v: Vertex): boolean => {\n        return vertexOrient(v) <= 0\n    }\n    let e2: HalfEdge = e\n    do {\n        if (++tests && strictly_right_of(line(e2), p2)) {\n            while (!(vertexRight(e2.origin) && vertexLeft(e2.target))) {\n                e2 = e2.next\n            }\n            if (!e2.twin) {\n                throw Error(\"out of bounds\")\n            }\n            e = e2.twin\n            path.push(e)\n            e2 = e.next\n        } else {\n            e2 = e2.next\n        }\n    } while (e2 !== e)\n    return {orient_tests: tests, path: path}\n}\n\n\n// WEBPACK FOOTER //\n// ./src/geom.ts"],"sourceRoot":""}