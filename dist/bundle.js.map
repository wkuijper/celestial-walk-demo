{"version":3,"sources":["webpack:///webpack/bootstrap 4d0eddc413945e3c84fa","webpack:///./src/geom.ts","webpack:///./node_modules/random-js/lib/random.js","webpack:///./src/index.ts","webpack:///./src/floorplan.ts"],"names":[],"mappings":"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CA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,SAAS;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,mBAAmB,QAAQ;AAC3B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,YAAY;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB,cAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,YAAY;AACnC;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AAAA;AACL,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC,Q;;;;;;;;;AC3sBD,oCAA+B;AAE/B,IAA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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 4d0eddc413945e3c84fa","import * as Random from 'random-js';\nimport { randomFloorplanMesh } from './floorplan';\n\nconst mersenne = Random.engines.mt19937()\nmersenne.seed(1111)\n\nexport type Vec2 = { x: number, y: number }\n\nexport type Line = { p1: Vec2, p2: Vec2 }\n\nexport type HalfEdge = {\n    origin: Vertex,\n    target: Vertex,\n    next: HalfEdge,\n    prev: HalfEdge,\n    left: Face,\n    edge: Edge,\n    twin?: HalfEdge\n    obtuse: boolean\n    fill: boolean\n}\n\nexport type Edge = { half: HalfEdge, constrained: boolean }\n\nexport type Mesh = { north: HalfEdge }\n\nexport type Vertex = { pos: Vec2, outgoing: HalfEdge }\n\nexport type Face = { some: HalfEdge, filled: boolean }\n\nexport type MeshType = \"Convex\" | \"Thin\" | \"Delaunay\" | \"Symmetric\" | \"Floorplan\"\n\nexport type WalkType = \"Straight\" | \"Visibility\" | \"Celestial\"\n\nexport function mesh(boundarySplits: number = 0): Mesh {\n    let nw = { pos: { x: -65536, y: +65536 } } as Vertex\n    let ne = { pos: { x: +65536, y: +65536 } } as Vertex\n    let se = { pos: { x: +65536, y: -65536 } } as Vertex\n    let sw = { pos: { x: -65536, y: -65536 } } as Vertex\n    let n = { obtuse: false, origin: ne, target: nw, fill: false } as HalfEdge\n    let e = { obtuse: false, origin: se, target: ne, fill: false } as HalfEdge\n    let s = { obtuse: false, origin: sw, target: se, fill: false } as HalfEdge\n    let w = { obtuse: false, origin: nw, target: sw, fill: false } as HalfEdge\n    let nn = { half: n, constrained: true } as Edge; n.edge = nn\n    let ee = { half: e, constrained: true } as Edge; e.edge = ee\n    let ss = { half: s, constrained: true } as Edge; s.edge = ss\n    let ww = { half: w, constrained: true } as Edge; w.edge = ww\n    ne.outgoing = n; nw.outgoing = w; sw.outgoing = s; se.outgoing = e\n    e.next = n; s.next = e; w.next = s; n.next = w\n    n.prev = e; e.prev = s; s.prev = w; w.prev = n\n    let f = { some: n, filled: false } as Face\n    n.left = f; e.left = f; s.left = f; w.left = f\n    let m = { north: n } as Mesh\n    function splitBoundary(boundary: HalfEdge[]) {\n        let nextBoundary: HalfEdge[] = []\n        boundary.forEach((e) => {\n            const sum = plus(e.origin.pos, e.target.pos)\n            if ((sum.x % 2) != 0 || (sum.y % 2) != 0) {\n                throw { geom: true, message: \"splitting boundary produces non-integer coordinate\" }\n            }\n            const p = { x: sum.x >> 1, y: sum.y >> 1 }\n            splitBoundaryEdgeInConvexMesh(m, e, p).forEach((e) => { nextBoundary.push(e) })\n        })\n        return nextBoundary\n    }\n    let boundary = [n, e, s, w]\n    for (let c = 0; c < boundarySplits; c++) {\n        boundary = splitBoundary(boundary)\n    }\n    return m\n}\n\nexport function orient(p: Vec2, q: Vec2, r: Vec2): number {\n    return ((q.x - p.x) * (r.y - p.y) - (q.y - p.y) * (r.x - p.x))\n}\n\nexport function incircle(a: Vec2, b: Vec2, c: Vec2, d: Vec2): boolean {\n    let ad: Vec2 = minus(a, d)\n    let bd: Vec2 = minus(b, d)\n    let cd: Vec2 = minus(c, d)\n    return ((ad.x * ad.x + ad.y * ad.y) * (bd.x * cd.y - cd.x * bd.y) + (bd.x * bd.x + bd.y * bd.y) * (cd.x * ad.y - ad.x * cd.y) + (cd.x * cd.x + cd.y * cd.y) * (ad.x * bd.y - bd.x * ad.y)) > 0;\n}\n\nexport function strictlyRightOf(l: Line, p: Vec2): boolean {\n    return orient(l.p1, l.p2, p) < 0\n}\n\nexport function rightOrOnTopOf(l: Line, p: Vec2): boolean {\n    return orient(l.p1, l.p2, p) <= 0\n}\n\nexport function onLine(l: Line, p: Vec2): boolean {\n    return orient(l.p1, l.p2, p) == 0\n}\n\nexport function pointsCoincide(p1: Vec2, p2: Vec2) {\n    return p1.x == p2.x && p1.y == p2.y\n}\n\nexport function strictlyLeftOf(l: Line, p: Vec2): boolean {\n    return orient(l.p1, l.p2, p) > 0\n}\n\nexport function leftOrOnTopOf(l: Line, p: Vec2): boolean {\n    return orient(l.p1, l.p2, p) >= 0\n}\n\nexport function line(e: HalfEdge): Line {\n    return { p1: e.origin.pos, p2: e.target.pos }\n}\n\nexport function lineByPointAndDir(p: Vec2, dir: Vec2): Line {\n    return { p1: p, p2: plus(p, dir) }\n}\n\nexport function rotateLeft(v: Vec2): Vec2 {\n    return { x: -v.y, y: v.x }\n}\n\nexport function rotateRight(v: Vec2): Vec2 {\n    return { x: v.y, y: -v.x }\n}\n\nexport function plus(a: Vec2, b: Vec2): Vec2 {\n    return { x: a.x + b.x, y: a.y + b.y }\n}\n\nexport function minus(a: Vec2, b: Vec2): Vec2 {\n    return { x: a.x - b.x, y: a.y - b.y }\n}\n\nexport function mult(a: Vec2, s: number): Vec2 {\n    return { x: a.x * s, y: a.y * s }\n}\n\nexport function roundVec2(p: Vec2) {\n    return { x: Math.round(p.x), y: Math.round(p.y) }\n}\n\nexport function approxBisectorNext(e2: HalfEdge): Line {\n    let e3: HalfEdge = e2.next\n    return lineByPointAndDir(e2.target.pos, rotateRight(minus(e3.target.pos, e2.origin.pos)))\n}\n\nexport function computeObtuseness(e2: HalfEdge) {\n    let e3 = e2.next\n    return strictlyRightOf(lineByPointAndDir(e2.target.pos, rotateLeft(minus(e2.target.pos, e2.origin.pos))), e3.target.pos)\n}\nexport function precomputeObtuseness(e2: HalfEdge) {\n    e2.obtuse = computeObtuseness(e2)\n}\n\nexport function gatherHalfEdges(m: Mesh): Set<HalfEdge> {\n    let visited: Set<HalfEdge> = new Set();\n    let waiting: HalfEdge[] = [];\n    let queue = (e: HalfEdge) => {\n        if (!visited.has(e)) {\n            waiting.push(e)\n            visited.add(e)\n            if (e.twin) {\n                waiting.push(e.twin)\n                visited.add(e.twin)\n            }\n        }\n    }\n    queue(m.north)\n    while (waiting.length > 0) {\n        let e: HalfEdge = waiting.pop()!;\n        queue(e.next)\n    }\n    return visited\n}\n\nexport function gatherEdges(m: Mesh): Set<Edge> {\n    let visited: Set<Edge> = new Set();\n    let waiting: HalfEdge[] = [];\n    let queue = (e: HalfEdge) => {\n        if (!visited.has(e.edge)) {\n            waiting.push(e)\n            if (e.twin) {\n                waiting.push(e.twin)\n            }\n            visited.add(e.edge)\n        }\n    }\n    queue(m.north)\n    while (waiting.length > 0) {\n        let e: HalfEdge = waiting.pop()!;\n        queue(e.next)\n    }\n    return visited\n}\n\nexport function gatherFaces(m: Mesh): Set<Face> {\n    let visited: Set<Face> = new Set();\n    let waiting: Face[] = [];\n    let queue = (f: Face) => {\n        waiting.push(f)\n        visited.add(f)\n    }\n    queue(m.north.left)\n    while (waiting.length > 0) {\n        let f: Face = waiting.pop()!;\n        let e: HalfEdge = f.some;\n        let e2 = e\n        do {\n            if (e2.twin && !visited.has(e2.twin.left)) {\n                queue(e2.twin.left)\n            }\n            e2 = e2.next\n        } while (e2 !== e)\n    }\n    return visited;\n}\n\nexport function gatherFaceEdges(f: Face) {\n    let edges: HalfEdge[] = []\n    let e = f.some\n    let e2 = e\n    do {\n        edges.push(e2)\n        e2 = e2.next\n    } while (e2 !== e)\n    return edges\n}\n\nexport function triangulateMesh(m: Mesh) {\n    gatherFaces(m).forEach((f) => { triangulateFace(f) })\n}\n\nexport function deleteEdge(e: HalfEdge) {\n    // e.twin must be defined \n    // e.left must be triangle\n    e.origin.outgoing = e.twin!.next\n    e.twin!.origin.outgoing = e.next\n    e.prev.left = e.twin!.left\n    e.next.left = e.twin!.left\n    e.twin!.prev.next = e.next\n    e.twin!.next.prev = e.prev\n    e.next.prev = e.twin!.prev\n    e.prev.next = e.twin!.next\n    e.twin!.left.some = e.next\n    precomputeObtuseness(e.prev)\n    precomputeObtuseness(e.twin!.prev)\n}\n\nexport function triangulateFace(f: Face) {\n    let e1: HalfEdge = f.some; let e2: HalfEdge = e1.next; let e3: HalfEdge = e2.next\n    while (e3.next != e1) {\n        while (!(strictlyLeftOf(line(e1), e2.target.pos) &&\n            strictlyRightOf({ p1: e2.target.pos, p2: e1.origin.pos }, e3.target.pos))) {\n            e1 = e2; e2 = e3; e3 = e3.next\n        }\n        e1 = cutPeak(e1); e2 = e1.next; e3 = e2.next\n    }\n}\n\nfunction precomputeObtusenessForNewHalfEdge(e: HalfEdge) {\n    precomputeObtuseness(e)\n    precomputeObtuseness(e.prev)\n}\n\nexport function cutPeak(e: HalfEdge): HalfEdge {\n    // angle(e, e.next) must kink left (e.origin, e.next.target) must not intersect anything\n    const e2 = e.next\n    const e3: HalfEdge = { origin: e2.target, target: e.origin, prev: e2, next: e, fill: false } as HalfEdge\n    const e3i: HalfEdge = { origin: e3.target, target: e3.origin, prev: e.prev, next: e2.next, twin: e3, left: e.left, fill: false } as HalfEdge\n    const ee3: Edge = { half: e3, constrained: false }; e3.edge = ee3; e3i.edge = ee3\n    e.prev.next = e3i; e2.next.prev = e3i; e3.twin = e3i\n    e.prev = e3; e2.next = e3\n    const ff = { some: e3, filled: e.left.filled } as Face\n    e.left.some = e3i\n    e.left = ff; e2.left = ff; e3.left = ff\n    precomputeObtusenessForNewHalfEdge(e3)\n    precomputeObtusenessForNewHalfEdge(e3i)\n    return e3i\n}\n\nexport function growEdge(e: HalfEdge, p: Vec2): Vertex {\n    // pre: p must be properly in e.left, (e.origin, p) and (e.target, p) must not intersect anything\n    // post: a vertex at p and the remainder of the face triangulated\n    let v: Vertex = { pos: p } as Vertex\n    let e2: HalfEdge = { origin: e.target, target: v, prev: e, fill: false } as HalfEdge\n    let e3: HalfEdge = { origin: v, target: e.origin, prev: e2, next: e, fill: false } as HalfEdge\n    e2.next = e3\n    v.outgoing = e3\n    let e2i: HalfEdge = { origin: v, target: e.target, next: e.next, left: e.left, twin: e2 } as HalfEdge\n    e2.twin = e2i\n    let e3i: HalfEdge = { origin: e.origin, target: v, prev: e.prev, next: e2i, left: e.left, twin: e3 } as HalfEdge\n    e2i.prev = e3i\n    e3.twin = e3i\n    e.left.some = e3i\n    let ee2: Edge = { half: e2, constrained: false }; e2.edge = ee2; e2i.edge = ee2\n    let ee3: Edge = { half: e3, constrained: false }; e3.edge = ee3; e3i.edge = ee3\n    e.next.prev = e2i\n    e.prev.next = e3i\n    e.next = e2; e.prev = e3\n    let ff = { some: e, filled: e.left.filled } as Face\n    e.left = ff; e2.left = ff; e3.left = ff\n    precomputeObtusenessForNewHalfEdge(e2)\n    precomputeObtusenessForNewHalfEdge(e2i)\n    precomputeObtusenessForNewHalfEdge(e3)\n    precomputeObtusenessForNewHalfEdge(e3i)\n    triangulateFace(e3i.left) // restore convexity\n    return v\n}\n\nexport function flipableEdge(e: HalfEdge): boolean {\n    // e.left and e.twin.left must be triangles\n    // returns true iff e is the unconstrained diagonal of a convex quadrilateral with no co-linear sides\n    return !e.edge.constrained\n        && strictlyLeftOf(line(e.twin!.prev), e.next.target.pos)\n        && strictlyLeftOf(line(e.twin!.next), e.next.target.pos)\n}\n\nexport function flipEdge(e: HalfEdge): HalfEdge {\n    // e must be diagonal of convex quadrilateral with no co-linear sides\n    let eprev: HalfEdge = e.prev\n    deleteEdge(e)\n    return cutPeak(eprev)\n}\n\nexport function insertVertex(m: Mesh, p: Vec2): Vertex {\n    return insertVertexFromEdge(m.north, p)\n}\n\nexport function splitEdgeApproximately(e: HalfEdge, p: Vec2): Vertex {\n    // round to nearest integer point\n    p = roundVec2(p)\n    // check if approximate intersection point is properly contained within left-cone/right-cone intersection\n    if (!strictlyLeftOf(line(e.next), p) || !strictlyLeftOf(line(e.prev), p) || !strictlyLeftOf(line(e.twin!.next), p) || !strictlyLeftOf(line(e.twin!.prev), p)) {\n        throw { message: \"insufficient precision for splitting edge\", edge: e, point: p }\n    }\n    return splitEdge(e, p)\n}\n\nexport function splitEdge(esplit: HalfEdge, p: Vec2): Vertex {\n    // p must be properly in the intersection of cones left and right of esplit\n    const estay = esplit.prev\n    deleteEdge(esplit)\n    const v = growEdge(estay, p)\n    if (esplit.edge.constrained) {\n        // patch up the constrained attributes of the two newly created undirected edges \n        // and the fill attributes of the four newly created directed edges\n        let e = v.outgoing\n        do {\n            if (e.target == esplit.origin) {\n                e.edge.constrained = true\n                e.fill = esplit.twin!.fill\n                e.twin!.fill = esplit.fill\n            } else if (e.target == esplit.target) {\n                e.edge.constrained = true\n                e.fill = esplit.fill\n                e.twin!.fill = esplit.twin!.fill\n            }\n            e = e.twin!.next\n        } while (e != v.outgoing)\n    }\n    return v\n}\n\nexport function insertVertexFromEdge(e: HalfEdge, p: Vec2): Vertex {\n    // pre: m must be triangular\n    // post: m will be triangular with vertex at p\n    let f: Face = walk(e, p)\n    let e1 = f.some; let e2 = e1.next; let e3 = e2.next\n    if (pointsCoincide(e1.origin.pos, p)) {\n        return e1.origin\n    }\n    if (pointsCoincide(e2.origin.pos, p)) {\n        return e2.origin\n    }\n    if (pointsCoincide(e3.origin.pos, p)) {\n        return e3.origin\n    }\n    if (onLine(line(e1), p)) {\n        return splitEdge(e1, p)\n    }\n    if (onLine(line(e2), p)) {\n        return splitEdge(e2, p)\n    }\n    if (onLine(line(e3), p)) {\n        return splitEdge(e3, p)\n    }\n    // split face\n    return growEdge(e1, p)\n}\n\nexport function walkToClosestVertex(einit: HalfEdge, p: Vec2): Vertex {\n    const e = walk(einit, p).some\n    function squaredDistance(v: Vertex): number {\n        const d = minus(v.pos, p)\n        return d.x * d.x + d.y * d.y\n    }\n    let clv = e.origin\n    let sqd = squaredDistance(e.origin)\n    const sqd2 = squaredDistance(e.target)\n    if (sqd2 < sqd) {\n        sqd = sqd2\n        clv = e.target\n    }\n    const sqd3 = squaredDistance(e.next.target)\n    if (sqd3 < sqd) {\n        sqd = sqd2\n        clv = e.next.target\n    }\n    return clv\n}\n\nexport function walk(einit: HalfEdge, p: Vec2): Face {\n    let e: HalfEdge = einit\n    if (strictlyRightOf(line(e), p)) {\n        if (!e.twin) {\n            throw { geom: true, message: \"out of bounds\" }\n        }\n        e = e.twin\n    }\n    let e2: HalfEdge = e.next\n    while (e !== e2) {\n        if (strictlyRightOf(line(e2), p)) {\n            while (e2.obtuse && leftOrOnTopOf(approxBisectorNext(e2), p)) {\n                e2 = e2.next\n            }\n            if (!e2.twin) {\n                throw { geom: true, message: \"out of bounds\" }\n            }\n            e = e2.twin\n            e2 = e.next\n        } else {\n            e2 = e2.next\n        }\n    }\n    return e.left\n}\n\nexport function isDelaunayTriangle(f: Face) {\n    const e = f.some\n    if (e.next.next.next != e) {\n        return false // not a triangle\n    }\n    let ee = e\n    do {\n        if (!ee.twin || ee.twin.next.next.next != ee.twin) {\n            return false // neighbour is not a triangle\n        }\n        if (incircle(ee.origin.pos, ee.target.pos, ee.next.target.pos, ee.twin.next.target.pos)) {\n            return false // neighbour is in circumcircle: not delaunay\n        }\n        ee = ee.next\n    } while (ee != e)\n    return true\n}\n\nexport function delaunafy(m: Mesh) {\n    // pre: m must be triangular\n    // post: m will be triangular and maximally delaunay\n    let waiting_set: Set<Edge> = gatherEdges(m)\n    let waiting_list: Edge[] = []\n    waiting_set.forEach((ee) => { waiting_list.push(ee) })\n    //shuffle(waiting_list)\n    let queue = (ee: Edge) => {\n        if (!waiting_set.has(ee)) {\n            const l = waiting_list.push(ee)\n            //if (l > 1) {\n            //    const i = Random.integer(0,l-1)(mersenne)\n            //    waiting_list[l-1] = waiting_list[i];\n            //    waiting_list[i] = ee;\n            //}\n            waiting_set.add(ee)\n        }\n    }\n    while (waiting_list.length > 0) {\n        let ee: Edge = waiting_list.pop()!\n        waiting_set.delete(ee)\n        let e: HalfEdge = ee.half\n        if (!(e.twin)) {\n            continue\n        }\n        if (incircle(e.origin.pos, e.target.pos, e.next.target.pos, e.twin.next.target.pos)\n            || incircle(e.twin.origin.pos, e.twin.target.pos, e.twin.next.target.pos, e.next.target.pos)) {\n            if (flipableEdge(e)) {\n                e = flipEdge(e)\n                queue(e.next.edge); queue(e.prev.edge)\n                queue(e.twin!.next.edge); queue(e.twin!.prev.edge)\n            }\n        }\n    }\n}\n\nexport function shuffle(array: any[]) {\n    let m = array.length, t, i;\n    while (m) {\n        m -= 1\n        i = Random.integer(0, m)(mersenne);\n        t = array[m];\n        array[m] = array[i];\n        array[i] = t;\n    }\n    return array;\n}\n\nexport function convexify(m: Mesh, deeply: boolean = false) {\n    // pre: m must be triangular\n    // post: m will (almost certainly?) no longer be triangular but still convex\n    delaunafy(m)\n    // shallow convexification: eliminate triangles based on local criterion\n    let triangles: Set<Face> = gatherFaces(m)\n    let waiting: Face[] = []\n    let deleted = (e: HalfEdge): boolean => {\n        if (e.twin\n            && !e.edge.constrained\n            && leftOrOnTopOf(line(e.twin.prev), e.next.target.pos)\n            && leftOrOnTopOf(line(e.twin.next), e.next.target.pos)) {\n            triangles.delete(e.left)\n            triangles.delete(e.twin.left)\n            deleteEdge(e)\n            return true\n        }\n        return false\n    }\n    triangles.forEach((f) => { waiting.push(f) })\n    //shuffle(waiting)\n    while (waiting.length > 0) {\n        let e: HalfEdge = waiting.pop()!.some\n        if (!triangles.has(e.left)) {\n            continue\n        }\n        if (deleted(e)) {\n            continue\n        }\n        if (deleted(e.next)) {\n            continue\n        }\n        if (deleted(e.prev)) {\n            continue\n        }\n    }\n    // deeper convexification: eliminate edges based on global criterion\n    // this operation is potentially very expensive, it is only to be used on sparse meshes\n    if (!deeply) {\n        return\n    }\n    function canEliminate(ee: Edge): boolean {\n        const estart = ee.half.prev\n        let e = estart\n        do {\n            let enext = e.next\n            if (enext.edge == ee) {\n                enext = enext.twin!.next\n            }\n            if (!leftOrOnTopOf(line(e), enext.target.pos)) {\n                return false\n            }\n            e = enext\n        } while (e != estart)\n        return true\n    }\n    let edges = gatherEdges(m)\n    edges.forEach((ee) => {\n        if (!ee.constrained && ee.half.twin && canEliminate(ee)) {\n            deleteEdge(ee.half)\n        }\n    })\n}\n\nexport type WalkStats = { orient_tests: number, path: HalfEdge[] }\n\nexport function celestialWalkStats(einit: HalfEdge, p: Vec2): WalkStats {\n    let tests: number = 0\n    let e: HalfEdge = einit\n    let path: HalfEdge[] = [e]\n    if (++tests && strictlyRightOf(line(e), p)) {\n        if (!e.twin) {\n            throw { geom: true, message: \"out of bounds\" }\n        }\n        e = e.twin\n        path.push(e)\n    }\n    let e2: HalfEdge = e.next\n    while (e !== e2) {\n        if (++tests && strictlyRightOf(line(e2), p)) {\n            while (e2.obtuse && (++tests && leftOrOnTopOf(approxBisectorNext(e2), p))) {\n                e2 = e2.next\n            }\n            if (!e2.twin) {\n                throw { geom: true, message: \"out of bounds\" }\n            }\n            e = e2.twin\n            path.push(e)\n            e2 = e.next\n        } else {\n            e2 = e2.next\n        }\n    }\n    return { orient_tests: tests, path: path }\n}\n\nexport function visibilityWalkStats(einit: HalfEdge, p: Vec2): WalkStats {\n    let tests: number = 0\n    let e: HalfEdge = einit\n    let path: HalfEdge[] = [e]\n    if (++tests && strictlyRightOf(line(e), p)) {\n        if (!e.twin) {\n            throw { geom: true, message: \"out of bounds\" }\n        }\n        e = e.twin\n        path.push(e)\n    }\n    let e2: HalfEdge = e.next\n    while (e !== e2) {\n        if (++tests && strictlyRightOf(line(e2), p)) {\n            if (!e2.twin) {\n                throw { geom: true, message: \"out of bounds\" }\n            }\n            e = e2.twin\n            path.push(e)\n            e2 = e.next\n        } else {\n            e2 = e2.next\n        }\n    }\n    return { orient_tests: tests, path: path }\n}\n\nexport function straightWalkStats(einit: HalfEdge, p1: Vec2, p2: Vec2): WalkStats {\n    let tests: number = 0\n    let e: HalfEdge = einit\n    let path: HalfEdge[] = [e]\n    let vertexOrientCache: Map<Vertex, number> = new Map()\n    // NOTE: Dynamic programming is used here to ensure we get\n    // the absolutely optimal implementation in terms of the\n    // number of orientation tests. In practice one would need\n    // to unroll the code significantly in order to eliminate \n    // the dynamic lookups without incurring superfluous \n    // orientation tests. We haven't done so here because that\n    // would lead to a lot of implementation complexity, hard\n    // to read code, bugs etc.\n    // As a result, this code is fair ONLY when comparing\n    // based on the number of orientation tests, NOT when \n    // comparing based on wall-clock time.\n    let vertexOrient = (v: Vertex): number => {\n        if (!vertexOrientCache.has(v)) {\n            tests++\n            vertexOrientCache.set(v, orient(p1, p2, v.pos))\n        }\n        return vertexOrientCache.get(v)!\n    }\n    let vertexLeft = (v: Vertex): boolean => {\n        return vertexOrient(v) >= 0\n    }\n    let vertexRight = (v: Vertex): boolean => {\n        return vertexOrient(v) <= 0\n    }\n    let e2: HalfEdge = e\n    do {\n        if (++tests && strictlyRightOf(line(e2), p2)) {\n            while (!(vertexRight(e2.origin) && vertexLeft(e2.target))) {\n                e2 = e2.next\n            }\n            if (!e2.twin) {\n                throw { geom: true, message: \"out of bounds\" }\n            }\n            e = e2.twin\n            path.push(e)\n            e2 = e.next\n        } else {\n            e2 = e2.next\n        }\n    } while (e2 !== e)\n    return { orient_tests: tests, path: path }\n}\n\nexport function walkStats(walkType: WalkType, initEdge: HalfEdge, p1: Vec2, p2: Vec2): WalkStats {\n    if (walkType == \"Celestial\") {\n        return celestialWalkStats(initEdge, p2)\n    } else if (walkType == \"Straight\") {\n        return straightWalkStats(initEdge, p1, p2)\n    }\n    // (walkType == \"Visibility\")\n    return visibilityWalkStats(initEdge, p2)\n}\n\nexport function mesh2html(title: string, m: Mesh, delaunayFaces?: boolean, walkStats?: WalkStats, line?: Line, showAll?: boolean): string {\n    return `<html>\n  <head>\n    <title>\n      ${title}\n    </title>\n    <style>\n    html, body {\n        height: 95%;\n    }\n    #mesh-div {\n        height: 100%;\n        min-height: 100%;\n\t    display: flex;\n        flex-direction: column;\n        padding: 20pt;\n    }\n    #mesh-svg {\n        display: flex;\n\t\tflex-direction: column;\n        justify-content: center;\n        border:2px;\n        border-style: solid;\n    }\n    </style>\n  </head>\n  <body>\n    <div id=\"mesh-div\">\n        ${mesh2svg(m, delaunayFaces, walkStats, line, showAll)}\n    </div>\n  </body>\n</html>`\n}\n\nexport function face2svg(face: Face, clss: string): string {\n    const p: Vec2 = face.some.origin.pos\n    const words: string[] = [`<path class=\"${clss}\" d=\"M ${p.x} ${p.y}`]\n    gatherFaceEdges(face).forEach((e: HalfEdge) => {\n        const p: Vec2 = e.target.pos\n        words.push(` L ${p.x} ${p.y}`)\n    })\n    words.push('\"/>')\n    return words.join(\"\")\n}\n\nexport function mesh2svg(m: Mesh, delaunayFaces?: boolean, walkStats?: WalkStats, line?: Line, showAll?: boolean): string {\n    function meshFaceLayer(): string {\n        const lines: string[] = []\n        const faces = gatherFaces(m)\n        faces.forEach((f) => {\n            lines.push(face2svg(f, f.filled ? \"mesh-filled-face\" : \"mesh-face\"))\n        })\n        return lines.join('\\n')\n    }\n    function delaunayLayer(): string {\n        if (!delaunayFaces) {\n            return \"\"\n        }\n        const lines: string[] = []\n        gatherFaces(m).forEach((f) => {\n            if (isDelaunayTriangle(f)) {\n                lines.push(face2svg(f, \"delaunay-face\"))\n            }\n        })\n        return lines.join('\\n')\n    }\n    function meshLineLayer(): string {\n        const lines: string[] = []\n        const edges = gatherEdges(m)\n        edges.forEach((e) => {\n            const p1 = e.half.origin.pos\n            const p2 = e.half.target.pos\n            lines.push(`<line x1=\"${p1.x}\" y1=\"${p1.y}\" x2=\"${p2.x}\" y2=\"${p2.y}\" class=\"${e.constrained ? \"mesh-constrained-line\" : \"mesh-line\"}\"/>`)\n        })\n        return lines.join('\\n')\n    }\n    function pathLayer(): string {\n        if (!walkStats) {\n            return \"\"\n        }\n        const lines: string[] = []\n        const path = walkStats.path\n        path.forEach((e) => {\n            const p1 = e.origin.pos\n            const p2 = e.target.pos\n            lines.push(`<line x1=\"${p1.x}\" y1=\"${p1.y}\" x2=\"${p2.x}\" y2=\"${p2.y}\" class=\"path-edge\"/>`)\n            lines.push(face2svg(e.left, \"path-face\"))\n        })\n        return lines.join('\\n')\n    }\n    function arrowLayer(): string {\n        if (!line) {\n            return \"\"\n        }\n        const p1 = line.p1\n        const p2 = line.p2\n        return `<circle cx=\"${p1.x}\" cy=\"${p1.y}\" r=\"5\" id=\"arrow-origin\"/>\n            ${p2 ? `<line x1=\"${p1.x}\" y1=\"${p1.y}\" x2=\"${p2.x}\" y2=\"${p2.y}\" id=\"arrow\" marker-end=\"url(#arrow-head)\"/>` : \"\"}`\n    }\n    return `<svg viewBox=\"${showAll ? \"-80000 -80000 160000 160000\" : \"-22000 -22000 44000 44000\"}\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"mesh-svg\">\n    <style type=\"text/css\">\n    .mesh-line {\n        stroke-width:100;\n        stroke:rgb(100,100,100);\n    }\n    .mesh-constrained-line {\n        stroke-width:200;\n        stroke:rgb(50,50,50);\n    }\n    #arrow {\n        stroke-width:200;\n        stroke:rgb(0,0,200);\n    }\n    #arrow-head {\n        fill:rgb(0,0,200);\n    }\n    #arrow-origin {\n        fill:rgb(0,0,200);\n    }\n    .mesh-face {\n        fill:rgb(255,255,255);\n    }\n    .mesh-filled-face {\n        fill:rgb(200, 200, 200);\n    }\n    .path-face {\n        fill:rgba(100, 200, 100,0.5);\n    }\n    .delaunay-face {\n        fill:rgba(200, 200, 100,0.3);\n    }\n    .path-edge {\n        stroke-width:300;\n        stroke:rgba(150,0,200,0.5); \n    }\n    </style>\n    <defs>\n        <marker id=\"arrow-head\" markerWidth=\"10\" markerHeight=\"10\" refX=\"7\" refY=\"3\" orient=\"auto\" markerUnits=\"strokeWidth\">\n            <path d=\"M0,0 L0,6 L9,3 z\" class=\"arrowhead\"/>\n        </marker>\n    </defs>\n    <g id=\"mesh-face-layer\">\n        ${meshFaceLayer()}\n    </g>    \n    <g id=\"delaunay-layer\">\n        ${delaunayLayer()}\n    </g>\n    <g id=\"mesh-line-layer\">\n        ${meshLineLayer()}\n    </g>\n    <g id=\"path-layer\">\n        ${pathLayer()}\n    </g>\n    <g id=\"arrow-layer\">\n        ${arrowLayer()}\n    </g>\n</svg>`\n}\n\nconst randomPointDistribution = Random.integer(-64500, 64500)\n\nexport function randomPoint(): Vec2 {\n    let x: number = randomPointDistribution(mersenne);\n    let y: number = randomPointDistribution(mersenne);\n    return { x: x, y: y }\n}\n\nexport function randomPointCloud(n: number): Vec2[] {\n    const pointCloud: Vec2[] = []\n    for (var i = 0; i < n; i++) {\n        pointCloud.push(randomPoint())\n    }\n    return pointCloud\n}\n\nexport function randomMesh(meshType: MeshType, boundarySplits: number = -1): Mesh {\n    if (meshType == \"Floorplan\") {\n        let m: Mesh|undefined\n        while (!m) {\n            const random = new Random(Random.engines.nativeMath)\n            try {\n                m = randomFloorplanMesh(random, true)\n            } catch (e) {\n                if (!e.geom) {\n                    throw e\n                }\n            }\n        }\n        return m\n    }\n    return meshFromPointCloud(meshType, randomPointCloud(200), boundarySplits)\n}\n\nexport function perturb(m: Mesh) {\n    for (let c = 0; c < 1000; c++) {\n        const f = walk(m.north, randomPoint())\n        if (!f) {\n            continue\n        }\n        if (f.some.twin && flipableEdge(f.some)) {\n            flipEdge(f.some)\n        } else if (f.some.next.twin && flipableEdge(f.some.next)) {\n            flipEdge(f.some.next)\n        } else if (f.some.next.next.twin && flipableEdge(f.some.next.next)) {\n            flipEdge(f.some.next.next)\n        }\n    }\n}\n\nexport function initialMesh(meshType: MeshType, boundarySplits: number = -1): Mesh {\n    if (boundarySplits < 0) {\n        boundarySplits = 0\n        if (meshType == \"Symmetric\") {\n            boundarySplits = 5\n        }\n    }\n    let m = mesh(boundarySplits)\n    if (meshType == \"Symmetric\") {\n        insertVertex(m, { x: 0, y: 0 })\n        let e = m.north\n        let a = 0\n        const r = 65536\n        do {\n            e.origin.pos = { x: Math.sin(a) * r, y: Math.cos(a) * r }\n            a = a - Math.PI / 64\n            e = e.next.twin!.next\n        } while (e != m.north)\n        e = m.north\n        do {\n            precomputeObtuseness(e)\n            precomputeObtuseness(e.next)\n            precomputeObtuseness(e.next.next)\n        } while (e != m.north)\n        //delaunafy(m)\n    } else {\n        triangulateMesh(m)\n    }\n    return m\n}\n\nexport function fillMeshFromPointCloud(m: Mesh, meshType: MeshType, pointCloud: Vec2[]) {\n    if (meshType == \"Symmetric\") {\n        pointCloud = pointCloud.filter(((p) => Math.sqrt((p.x * p.x) + (p.y * p.y)) < 65536))\n    }\n    pointCloud.forEach((p: Vec2) => {\n        insertVertex(m, p)\n    })\n    if (meshType == \"Thin\") {\n        // do nothing\n    } else if (meshType == \"Delaunay\" || meshType == \"Symmetric\") {\n        delaunafy(m)\n    } else if (meshType == \"Convex\") {\n        delaunafy(m)\n        convexify(m)\n    }\n    return m\n}\n\nexport function meshFromPointCloud(meshType: MeshType, pointCloud: Vec2[], boundarySplits: number = -1): Mesh {\n    const m = initialMesh(meshType, boundarySplits)\n    fillMeshFromPointCloud(m, meshType, pointCloud)\n    return m\n}\n\nexport function splitBoundaryEdgeInConvexMesh(m: Mesh, e: HalfEdge, p: Vec2): [HalfEdge, HalfEdge] {\n    // pre: m must be convex, p must be on e, t.twin must be undefined (i.e.: e must be a boundary edge)\n    // post: m will be convex, e split in two with a vertex at p\n    const en = e.next\n    const ep = e.prev\n\n    const v: Vertex = { pos: p } as Vertex\n\n    const er: HalfEdge = { origin: e.origin, target: v, prev: ep, left: e.left } as HalfEdge\n    const el: HalfEdge = { origin: v, target: e.target, prev: er, next: en, left: e.left } as HalfEdge\n    er.next = el; e.left.some = el\n\n    en.prev = el; ep.next = er\n\n    const eel: Edge = e.edge; el.edge = eel; eel.half = el\n    const eer: Edge = { half: er, constrained: true }; er.edge = eer\n\n    v.outgoing = el; e.origin.outgoing = er\n\n    precomputeObtusenessForNewHalfEdge(er)\n    precomputeObtusenessForNewHalfEdge(el)\n\n    if (m.north == e) {\n        m.north = el\n    }\n\n    return [el, er]\n}\n\nexport function splitBoundaryEdgeInTriangularMesh(m: Mesh, e: HalfEdge, p: Vec2): [HalfEdge, HalfEdge] {\n    // pre: m must be triangular, p must be on e, t.twin must be undefined (i.e.: e must be a boundary edge)\n    // post: m will be triangular, e and e.left split in two with a vertex at p\n    const en = e.next\n    const ep = e.prev\n\n    const v: Vertex = { pos: p } as Vertex\n\n    const er: HalfEdge = { origin: e.origin, target: v, prev: ep } as HalfEdge\n    const el: HalfEdge = { origin: v, target: e.target, next: en } as HalfEdge\n    const ern: HalfEdge = { origin: er.target, target: ep.origin, prev: er, next: ep } as HalfEdge\n    er.next = ern\n    const elp: HalfEdge = { origin: en.target, target: el.origin, prev: en, next: el } as HalfEdge\n    el.prev = elp\n    elp.twin = ern; ern.twin = elp\n\n    en.prev = el; en.next = elp\n    ep.prev = ern; ep.next = er\n\n    const eel: Edge = e.edge; el.edge = eel; eel.half = el\n    const eer: Edge = { half: er, constrained: true }; er.edge = eer\n    const ee: Edge = { half: ern, constrained: false }; ern.edge = ee; elp.edge = ee\n\n    const fl = e.left; fl.some = el\n    const fr = { some: er } as Face\n    el.left = fl; en.left = fl; elp.left = fl\n    er.left = fr; ern.left = fr; ep.left = fr\n\n    v.outgoing = el; e.origin.outgoing = er\n\n    precomputeObtusenessForNewHalfEdge(er)\n    precomputeObtusenessForNewHalfEdge(ern)\n    precomputeObtusenessForNewHalfEdge(elp)\n    precomputeObtusenessForNewHalfEdge(el)\n\n    if (m.north == e) {\n        m.north = el\n    }\n\n    return [el, er]\n}\n\nexport function vec2String(p: Vec2): string {\n    return `(${p.x},${p.y})`\n}\n\nexport function vertexString(v: Vertex): string {\n    return `${vec2String(v.pos)}`\n}\n\nexport function halfEdgeString(e: HalfEdge): string {\n    return `${vertexString(e.origin)}->${vertexString(e.target)}`\n}\n\nexport function halfEdgeDelta(e: HalfEdge): Vec2 {\n    return minus(e.target.pos, e.origin.pos)\n}\n\nexport function halfEdgeLength(e: HalfEdge): number {\n    const d = halfEdgeDelta(e)\n    return Math.sqrt((d.x * d.x) + (d.y * d.y))\n}\n\nexport function edgeLength(ee: Edge): number {\n    return halfEdgeLength(ee.half)\n}\n\nexport function connected(a: Vertex, b: Vertex): Edge|null {\n    // returns true iff a and b are connected by an edge\n    // if at least one vertex is an internal vertex this means there will be two half-edges linking both vertices\n    // if both vertices are boundary vertices this means there will be only one half-edge linking both vertices\n    let e = a.outgoing\n    if (e.target == b) {\n        return e.edge\n    }\n    while (e.twin) {\n        e = e.twin.next\n        if (e == a.outgoing) {\n            e = b.outgoing\n            if (e.target == a) {\n                return e.edge\n            }\n            while (e.twin) {\n                e = e.twin.next\n                if (e == b.outgoing) {\n                    return null\n                }\n                if (e.target == a) {\n                    return e.edge\n                }\n            }\n            e = b.outgoing\n            while (e.prev.twin) {\n                e = e.prev.twin\n                if (e.target == a) {\n                    return e.edge\n                }\n            }\n            return null\n        }\n        if (e.target == b) {\n            return e.edge\n        }\n    }\n    e = a.outgoing\n    while (e.prev.twin) {\n        e = e.prev.twin\n        if (e.target == b) {\n            return e.edge\n        }\n    }\n    e = b.outgoing\n    if (e.target == a) {\n        return e.edge\n    }\n    while (e.twin) {\n        e = e.twin.next\n        if (e == b.outgoing) {\n            return null\n        }\n        if (e.target == a) {\n            return e.edge\n        }\n    }\n    e = b.outgoing\n    while (e.prev.twin) {\n        e = e.prev.twin\n        if (e.target == a) {\n            return e.edge\n        }\n    }\n    return null\n}\n\nexport function pivot(vertex: Vertex, goalPos: Vec2): HalfEdge {\n    // pre: mesh must be triangular, line from vertex.pos to goal must be properly contained in mesh.\n    // post: a hand halfedge such that hand.source == vertex and the goal is on-or-left-of hand and strictly-left-of hand.prev\n    let hand = vertex.outgoing\n    if (pointsCoincide(vertex.pos, goalPos)) {\n        throw { geom: true, message: \"can't pivot towards own position\" }\n    }\n    while (!(leftOrOnTopOf(line(hand), goalPos) && strictlyLeftOf(line(hand.prev), goalPos))) {\n        if (!hand.twin) {\n            if (rightOrOnTopOf(line(hand), goalPos)) {\n                throw { geom: true, message: \"can't pivot boundary vertex towards out-of-bounds position\" }\n            }\n            while (hand.prev.twin) {\n                hand = hand.prev.twin\n            }\n        } else {\n            hand = hand.twin.next\n        }\n    }\n    return hand\n}\n\nexport function flipToConnectViaIntermediaryVertex(from: Vertex, to: Vertex, fromEdge: HalfEdge) {\n    // we're looking for a single intervening vertex such that no other vertex intersects the from-split-to triangle\n    let currSplitVertex = fromEdge.target\n    let currCutLine = line(fromEdge)\n    let currEdge = fromEdge\n    while (currEdge.target != to) {\n        const s = orient(from.pos, to.pos, currEdge.target.pos)\n        if (s == 0) {\n            throw { message: \"intersecting existing vertex\", existingVertex: currEdge.target }\n        }\n        if (s > 0) {\n            // we're on the wrong side of the from-to line: keep going\n            currEdge = currEdge.twin!.next\n            continue\n        }\n        if (strictlyLeftOf(currCutLine, currEdge.target.pos)) {\n            // the current vertex falls inside the from-split-to triangle so it will replace the current split-vertex\n            currSplitVertex = currEdge.target\n            currCutLine.p2 = currEdge.target.pos\n        }\n        currEdge = currEdge.next\n    }\n    if (!connected(from, currSplitVertex)) {\n        flipToConnectVertices(from, currSplitVertex)\n    }\n    if (!connected(currSplitVertex, to)) {\n        flipToConnectVertices(currSplitVertex, to)\n    }\n}\n\nexport function flipToConnectVertices(start: Vertex, finish: Vertex): HalfEdge {\n    while (true) {\n        const startEdge = pivot(start, finish.pos)\n        const finishEdge = pivot(finish, start.pos)\n        if (startEdge.target == finish) {\n            // we're already done\n            return startEdge\n        } else if (startEdge.next.target != finishEdge.target) {\n            // left-hand-side of start to finish line must be brought to a triangle shape with single intermediary vertex\n            flipToConnectViaIntermediaryVertex(finish, start, finishEdge)\n        } else if (finishEdge.next.target != startEdge.target) {\n            // right-hand-side of start to finish line must be brought to a triangle shape with single intermediary vertex\n            flipToConnectViaIntermediaryVertex(start, finish, startEdge)\n        } else {\n            // two triangle halves make a convex quadrilateral that can be flipped to connect the vertices\n            const crossingEdge: HalfEdge = startEdge.next\n            if (!flipableEdge(crossingEdge)) {\n                throw { message: \"intersecting constrained edge\", constrainedEdge: crossingEdge.edge }\n            }\n            const e = flipEdge(crossingEdge)\n            return e\n        }\n    }\n}\n\nexport function draw(m: Mesh, l: Line, fillLeft: boolean, fillRight: boolean) {\n    const v1 = insertVertex(m, l.p1)\n    const v2 = insertVertex(m, l.p2)\n    drawBetweenVertices(v1, v2, fillLeft, fillRight)\n}\n\nexport function drawBetweenVertices(v1: Vertex, v2: Vertex, fillLeft: boolean, fillRight: boolean) {\n    if (v1 == v2) {\n        return\n    }\n    try {\n        const e = flipToConnectVertices(v1, v2)\n        e.edge.constrained = true\n        e.fill = fillLeft\n        e.twin!.fill = fillRight\n    } catch (exception) {\n        if (exception.constrainedEdge) {\n            const constrainedEdge: Edge = exception.constrainedEdge\n            const e = constrainedEdge.half\n            // approximate intersection point\n            let [c1, c2] = [e.origin.pos, e.target.pos]\n            let [p1, p2] = [v1.pos, v2.pos]\n            if (orient(c1, c2, p1) > 0) {\n                [p1, p2] = [p2, p1]\n            }\n            let p: Vec2\n            for (let c = 0; c < 20; c++) {\n                p = mult(plus(p1, p2), .5)\n                const s = orient(c1, c2, p)\n                if (s == 0) {\n                    break\n                } else if (s > 0) {\n                    p2 = p\n                } else {\n                    p1 = p\n                }\n            }\n            // go ahead: split the edge and recurse\n            const v = splitEdgeApproximately(e, p!)\n            drawBetweenVertices(v1, v, fillLeft, fillRight)\n            drawBetweenVertices(v, v2, fillLeft, fillRight)\n        } else if (exception.existingVertex) {\n            const v: Vertex = exception.existingVertex\n            drawBetweenVertices(v1, v, fillLeft, fillRight)\n            drawBetweenVertices(v, v2, fillLeft, fillRight)\n        } else {\n            throw exception\n        }\n    }\n}\n\nexport function floodFill(m: Mesh) {\n    const halfEdges = gatherHalfEdges(m)\n    const faces = gatherFaces(m)\n    faces.forEach((f) => {\n        f.filled = false\n    })\n    const waiting: Face[] = []\n    halfEdges.forEach((e) => {\n        if (e.fill && !e.left.filled) {\n            waiting.push(e.left)\n            e.left.filled = true\n        }\n    })\n    while (waiting.length > 0) {\n        const f = waiting.pop()!;\n        [f.some, f.some.next, f.some.next.next].forEach((e) => {\n            if (!e.twin) {\n                return\n            }\n            e = e.twin\n            if (!e.edge.constrained && !e.left.filled) {\n                waiting.push(e.left)\n                e.left.filled = true\n            }\n        })\n    }\n    const edges = gatherEdges(m)\n    edges.forEach((ee) => {\n        if (ee.constrained) {\n            const e = ee.half\n            if (e.left.filled && e.twin && e.twin.left.filled) {\n                ee.constrained = false\n            }\n        }\n    })\n}\n\n\n// WEBPACK FOOTER //\n// ./src/geom.ts","/*jshint eqnull:true*/\n(function (root) {\n  \"use strict\";\n\n  var GLOBAL_KEY = \"Random\";\n\n  var imul = (typeof Math.imul !== \"function\" || Math.imul(0xffffffff, 5) !== -5 ?\n    function (a, b) {\n      var ah = (a >>> 16) & 0xffff;\n      var al = a & 0xffff;\n      var bh = (b >>> 16) & 0xffff;\n      var bl = b & 0xffff;\n      // the shift by 0 fixes the sign on the high part\n      // the final |0 converts the unsigned value into a signed value\n      return (al * bl) + (((ah * bl + al * bh) << 16) >>> 0) | 0;\n    } :\n    Math.imul);\n\n  var stringRepeat = (typeof String.prototype.repeat === \"function\" && \"x\".repeat(3) === \"xxx\" ?\n    function (x, y) {\n      return x.repeat(y);\n    } : function (pattern, count) {\n      var result = \"\";\n      while (count > 0) {\n        if (count & 1) {\n          result += pattern;\n        }\n        count >>= 1;\n        pattern += pattern;\n      }\n      return result;\n    });\n\n  function Random(engine) {\n    if (!(this instanceof Random)) {\n      return new Random(engine);\n    }\n\n    if (engine == null) {\n      engine = Random.engines.nativeMath;\n    } else if (typeof engine !== \"function\") {\n      throw new TypeError(\"Expected engine to be a function, got \" + typeof engine);\n    }\n    this.engine = engine;\n  }\n  var proto = Random.prototype;\n\n  Random.engines = {\n    nativeMath: function () {\n      return (Math.random() * 0x100000000) | 0;\n    },\n    mt19937: (function (Int32Array) {\n      // http://en.wikipedia.org/wiki/Mersenne_twister\n      function refreshData(data) {\n        var k = 0;\n        var tmp = 0;\n        for (;\n          (k | 0) < 227; k = (k + 1) | 0) {\n          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);\n          data[k] = data[(k + 397) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n        }\n\n        for (;\n          (k | 0) < 623; k = (k + 1) | 0) {\n          tmp = (data[k] & 0x80000000) | (data[(k + 1) | 0] & 0x7fffffff);\n          data[k] = data[(k - 227) | 0] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n        }\n\n        tmp = (data[623] & 0x80000000) | (data[0] & 0x7fffffff);\n        data[623] = data[396] ^ (tmp >>> 1) ^ ((tmp & 0x1) ? 0x9908b0df : 0);\n      }\n\n      function temper(value) {\n        value ^= value >>> 11;\n        value ^= (value << 7) & 0x9d2c5680;\n        value ^= (value << 15) & 0xefc60000;\n        return value ^ (value >>> 18);\n      }\n\n      function seedWithArray(data, source) {\n        var i = 1;\n        var j = 0;\n        var sourceLength = source.length;\n        var k = Math.max(sourceLength, 624) | 0;\n        var previous = data[0] | 0;\n        for (;\n          (k | 0) > 0; --k) {\n          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x0019660d)) + (source[j] | 0) + (j | 0)) | 0;\n          i = (i + 1) | 0;\n          ++j;\n          if ((i | 0) > 623) {\n            data[0] = data[623];\n            i = 1;\n          }\n          if (j >= sourceLength) {\n            j = 0;\n          }\n        }\n        for (k = 623;\n          (k | 0) > 0; --k) {\n          data[i] = previous = ((data[i] ^ imul((previous ^ (previous >>> 30)), 0x5d588b65)) - i) | 0;\n          i = (i + 1) | 0;\n          if ((i | 0) > 623) {\n            data[0] = data[623];\n            i = 1;\n          }\n        }\n        data[0] = 0x80000000;\n      }\n\n      function mt19937() {\n        var data = new Int32Array(624);\n        var index = 0;\n        var uses = 0;\n\n        function next() {\n          if ((index | 0) >= 624) {\n            refreshData(data);\n            index = 0;\n          }\n\n          var value = data[index];\n          index = (index + 1) | 0;\n          uses += 1;\n          return temper(value) | 0;\n        }\n        next.getUseCount = function() {\n          return uses;\n        };\n        next.discard = function (count) {\n          uses += count;\n          if ((index | 0) >= 624) {\n            refreshData(data);\n            index = 0;\n          }\n          while ((count - index) > 624) {\n            count -= 624 - index;\n            refreshData(data);\n            index = 0;\n          }\n          index = (index + count) | 0;\n          return next;\n        };\n        next.seed = function (initial) {\n          var previous = 0;\n          data[0] = previous = initial | 0;\n\n          for (var i = 1; i < 624; i = (i + 1) | 0) {\n            data[i] = previous = (imul((previous ^ (previous >>> 30)), 0x6c078965) + i) | 0;\n          }\n          index = 624;\n          uses = 0;\n          return next;\n        };\n        next.seedWithArray = function (source) {\n          next.seed(0x012bd6aa);\n          seedWithArray(data, source);\n          return next;\n        };\n        next.autoSeed = function () {\n          return next.seedWithArray(Random.generateEntropyArray());\n        };\n        return next;\n      }\n\n      return mt19937;\n    }(typeof Int32Array === \"function\" ? Int32Array : Array)),\n    browserCrypto: (typeof crypto !== \"undefined\" && typeof crypto.getRandomValues === \"function\" && typeof Int32Array === \"function\") ? (function () {\n      var data = null;\n      var index = 128;\n\n      return function () {\n        if (index >= 128) {\n          if (data === null) {\n            data = new Int32Array(128);\n          }\n          crypto.getRandomValues(data);\n          index = 0;\n        }\n\n        return data[index++] | 0;\n      };\n    }()) : null\n  };\n\n  Random.generateEntropyArray = function () {\n    var array = [];\n    var engine = Random.engines.nativeMath;\n    for (var i = 0; i < 16; ++i) {\n      array[i] = engine() | 0;\n    }\n    array.push(new Date().getTime() | 0);\n    return array;\n  };\n\n  function returnValue(value) {\n    return function () {\n      return value;\n    };\n  }\n\n  // [-0x80000000, 0x7fffffff]\n  Random.int32 = function (engine) {\n    return engine() | 0;\n  };\n  proto.int32 = function () {\n    return Random.int32(this.engine);\n  };\n\n  // [0, 0xffffffff]\n  Random.uint32 = function (engine) {\n    return engine() >>> 0;\n  };\n  proto.uint32 = function () {\n    return Random.uint32(this.engine);\n  };\n\n  // [0, 0x1fffffffffffff]\n  Random.uint53 = function (engine) {\n    var high = engine() & 0x1fffff;\n    var low = engine() >>> 0;\n    return (high * 0x100000000) + low;\n  };\n  proto.uint53 = function () {\n    return Random.uint53(this.engine);\n  };\n\n  // [0, 0x20000000000000]\n  Random.uint53Full = function (engine) {\n    while (true) {\n      var high = engine() | 0;\n      if (high & 0x200000) {\n        if ((high & 0x3fffff) === 0x200000 && (engine() | 0) === 0) {\n          return 0x20000000000000;\n        }\n      } else {\n        var low = engine() >>> 0;\n        return ((high & 0x1fffff) * 0x100000000) + low;\n      }\n    }\n  };\n  proto.uint53Full = function () {\n    return Random.uint53Full(this.engine);\n  };\n\n  // [-0x20000000000000, 0x1fffffffffffff]\n  Random.int53 = function (engine) {\n    var high = engine() | 0;\n    var low = engine() >>> 0;\n    return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n  };\n  proto.int53 = function () {\n    return Random.int53(this.engine);\n  };\n\n  // [-0x20000000000000, 0x20000000000000]\n  Random.int53Full = function (engine) {\n    while (true) {\n      var high = engine() | 0;\n      if (high & 0x400000) {\n        if ((high & 0x7fffff) === 0x400000 && (engine() | 0) === 0) {\n          return 0x20000000000000;\n        }\n      } else {\n        var low = engine() >>> 0;\n        return ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n      }\n    }\n  };\n  proto.int53Full = function () {\n    return Random.int53Full(this.engine);\n  };\n\n  function add(generate, addend) {\n    if (addend === 0) {\n      return generate;\n    } else {\n      return function (engine) {\n        return generate(engine) + addend;\n      };\n    }\n  }\n\n  Random.integer = (function () {\n    function isPowerOfTwoMinusOne(value) {\n      return ((value + 1) & value) === 0;\n    }\n\n    function bitmask(masking) {\n      return function (engine) {\n        return engine() & masking;\n      };\n    }\n\n    function downscaleToLoopCheckedRange(range) {\n      var extendedRange = range + 1;\n      var maximum = extendedRange * Math.floor(0x100000000 / extendedRange);\n      return function (engine) {\n        var value = 0;\n        do {\n          value = engine() >>> 0;\n        } while (value >= maximum);\n        return value % extendedRange;\n      };\n    }\n\n    function downscaleToRange(range) {\n      if (isPowerOfTwoMinusOne(range)) {\n        return bitmask(range);\n      } else {\n        return downscaleToLoopCheckedRange(range);\n      }\n    }\n\n    function isEvenlyDivisibleByMaxInt32(value) {\n      return (value | 0) === 0;\n    }\n\n    function upscaleWithHighMasking(masking) {\n      return function (engine) {\n        var high = engine() & masking;\n        var low = engine() >>> 0;\n        return (high * 0x100000000) + low;\n      };\n    }\n\n    function upscaleToLoopCheckedRange(extendedRange) {\n      var maximum = extendedRange * Math.floor(0x20000000000000 / extendedRange);\n      return function (engine) {\n        var ret = 0;\n        do {\n          var high = engine() & 0x1fffff;\n          var low = engine() >>> 0;\n          ret = (high * 0x100000000) + low;\n        } while (ret >= maximum);\n        return ret % extendedRange;\n      };\n    }\n\n    function upscaleWithinU53(range) {\n      var extendedRange = range + 1;\n      if (isEvenlyDivisibleByMaxInt32(extendedRange)) {\n        var highRange = ((extendedRange / 0x100000000) | 0) - 1;\n        if (isPowerOfTwoMinusOne(highRange)) {\n          return upscaleWithHighMasking(highRange);\n        }\n      }\n      return upscaleToLoopCheckedRange(extendedRange);\n    }\n\n    function upscaleWithinI53AndLoopCheck(min, max) {\n      return function (engine) {\n        var ret = 0;\n        do {\n          var high = engine() | 0;\n          var low = engine() >>> 0;\n          ret = ((high & 0x1fffff) * 0x100000000) + low + (high & 0x200000 ? -0x20000000000000 : 0);\n        } while (ret < min || ret > max);\n        return ret;\n      };\n    }\n\n    return function (min, max) {\n      min = Math.floor(min);\n      max = Math.floor(max);\n      if (min < -0x20000000000000 || !isFinite(min)) {\n        throw new RangeError(\"Expected min to be at least \" + (-0x20000000000000));\n      } else if (max > 0x20000000000000 || !isFinite(max)) {\n        throw new RangeError(\"Expected max to be at most \" + 0x20000000000000);\n      }\n\n      var range = max - min;\n      if (range <= 0 || !isFinite(range)) {\n        return returnValue(min);\n      } else if (range === 0xffffffff) {\n        if (min === 0) {\n          return Random.uint32;\n        } else {\n          return add(Random.int32, min + 0x80000000);\n        }\n      } else if (range < 0xffffffff) {\n        return add(downscaleToRange(range), min);\n      } else if (range === 0x1fffffffffffff) {\n        return add(Random.uint53, min);\n      } else if (range < 0x1fffffffffffff) {\n        return add(upscaleWithinU53(range), min);\n      } else if (max - 1 - min === 0x1fffffffffffff) {\n        return add(Random.uint53Full, min);\n      } else if (min === -0x20000000000000 && max === 0x20000000000000) {\n        return Random.int53Full;\n      } else if (min === -0x20000000000000 && max === 0x1fffffffffffff) {\n        return Random.int53;\n      } else if (min === -0x1fffffffffffff && max === 0x20000000000000) {\n        return add(Random.int53, 1);\n      } else if (max === 0x20000000000000) {\n        return add(upscaleWithinI53AndLoopCheck(min - 1, max - 1), 1);\n      } else {\n        return upscaleWithinI53AndLoopCheck(min, max);\n      }\n    };\n  }());\n  proto.integer = function (min, max) {\n    return Random.integer(min, max)(this.engine);\n  };\n\n  // [0, 1] (floating point)\n  Random.realZeroToOneInclusive = function (engine) {\n    return Random.uint53Full(engine) / 0x20000000000000;\n  };\n  proto.realZeroToOneInclusive = function () {\n    return Random.realZeroToOneInclusive(this.engine);\n  };\n\n  // [0, 1) (floating point)\n  Random.realZeroToOneExclusive = function (engine) {\n    return Random.uint53(engine) / 0x20000000000000;\n  };\n  proto.realZeroToOneExclusive = function () {\n    return Random.realZeroToOneExclusive(this.engine);\n  };\n\n  Random.real = (function () {\n    function multiply(generate, multiplier) {\n      if (multiplier === 1) {\n        return generate;\n      } else if (multiplier === 0) {\n        return function () {\n          return 0;\n        };\n      } else {\n        return function (engine) {\n          return generate(engine) * multiplier;\n        };\n      }\n    }\n\n    return function (left, right, inclusive) {\n      if (!isFinite(left)) {\n        throw new RangeError(\"Expected left to be a finite number\");\n      } else if (!isFinite(right)) {\n        throw new RangeError(\"Expected right to be a finite number\");\n      }\n      return add(\n        multiply(\n          inclusive ? Random.realZeroToOneInclusive : Random.realZeroToOneExclusive,\n          right - left),\n        left);\n    };\n  }());\n  proto.real = function (min, max, inclusive) {\n    return Random.real(min, max, inclusive)(this.engine);\n  };\n\n  Random.bool = (function () {\n    function isLeastBitTrue(engine) {\n      return (engine() & 1) === 1;\n    }\n\n    function lessThan(generate, value) {\n      return function (engine) {\n        return generate(engine) < value;\n      };\n    }\n\n    function probability(percentage) {\n      if (percentage <= 0) {\n        return returnValue(false);\n      } else if (percentage >= 1) {\n        return returnValue(true);\n      } else {\n        var scaled = percentage * 0x100000000;\n        if (scaled % 1 === 0) {\n          return lessThan(Random.int32, (scaled - 0x80000000) | 0);\n        } else {\n          return lessThan(Random.uint53, Math.round(percentage * 0x20000000000000));\n        }\n      }\n    }\n\n    return function (numerator, denominator) {\n      if (denominator == null) {\n        if (numerator == null) {\n          return isLeastBitTrue;\n        }\n        return probability(numerator);\n      } else {\n        if (numerator <= 0) {\n          return returnValue(false);\n        } else if (numerator >= denominator) {\n          return returnValue(true);\n        }\n        return lessThan(Random.integer(0, denominator - 1), numerator);\n      }\n    };\n  }());\n  proto.bool = function (numerator, denominator) {\n    return Random.bool(numerator, denominator)(this.engine);\n  };\n\n  function toInteger(value) {\n    var number = +value;\n    if (number < 0) {\n      return Math.ceil(number);\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function convertSliceArgument(value, length) {\n    if (value < 0) {\n      return Math.max(value + length, 0);\n    } else {\n      return Math.min(value, length);\n    }\n  }\n  Random.pick = function (engine, array, begin, end) {\n    var length = array.length;\n    var start = begin == null ? 0 : convertSliceArgument(toInteger(begin), length);\n    var finish = end === void 0 ? length : convertSliceArgument(toInteger(end), length);\n    if (start >= finish) {\n      return void 0;\n    }\n    var distribution = Random.integer(start, finish - 1);\n    return array[distribution(engine)];\n  };\n  proto.pick = function (array, begin, end) {\n    return Random.pick(this.engine, array, begin, end);\n  };\n\n  function returnUndefined() {\n    return void 0;\n  }\n  var slice = Array.prototype.slice;\n  Random.picker = function (array, begin, end) {\n    var clone = slice.call(array, begin, end);\n    if (!clone.length) {\n      return returnUndefined;\n    }\n    var distribution = Random.integer(0, clone.length - 1);\n    return function (engine) {\n      return clone[distribution(engine)];\n    };\n  };\n\n  Random.shuffle = function (engine, array, downTo) {\n    var length = array.length;\n    if (length) {\n      if (downTo == null) {\n        downTo = 0;\n      }\n      for (var i = (length - 1) >>> 0; i > downTo; --i) {\n        var distribution = Random.integer(0, i);\n        var j = distribution(engine);\n        if (i !== j) {\n          var tmp = array[i];\n          array[i] = array[j];\n          array[j] = tmp;\n        }\n      }\n    }\n    return array;\n  };\n  proto.shuffle = function (array) {\n    return Random.shuffle(this.engine, array);\n  };\n\n  Random.sample = function (engine, population, sampleSize) {\n    if (sampleSize < 0 || sampleSize > population.length || !isFinite(sampleSize)) {\n      throw new RangeError(\"Expected sampleSize to be within 0 and the length of the population\");\n    }\n\n    if (sampleSize === 0) {\n      return [];\n    }\n\n    var clone = slice.call(population);\n    var length = clone.length;\n    if (length === sampleSize) {\n      return Random.shuffle(engine, clone, 0);\n    }\n    var tailLength = length - sampleSize;\n    return Random.shuffle(engine, clone, tailLength - 1).slice(tailLength);\n  };\n  proto.sample = function (population, sampleSize) {\n    return Random.sample(this.engine, population, sampleSize);\n  };\n\n  Random.die = function (sideCount) {\n    return Random.integer(1, sideCount);\n  };\n  proto.die = function (sideCount) {\n    return Random.die(sideCount)(this.engine);\n  };\n\n  Random.dice = function (sideCount, dieCount) {\n    var distribution = Random.die(sideCount);\n    return function (engine) {\n      var result = [];\n      result.length = dieCount;\n      for (var i = 0; i < dieCount; ++i) {\n        result[i] = distribution(engine);\n      }\n      return result;\n    };\n  };\n  proto.dice = function (sideCount, dieCount) {\n    return Random.dice(sideCount, dieCount)(this.engine);\n  };\n\n  // http://en.wikipedia.org/wiki/Universally_unique_identifier\n  Random.uuid4 = (function () {\n    function zeroPad(string, zeroCount) {\n      return stringRepeat(\"0\", zeroCount - string.length) + string;\n    }\n\n    return function (engine) {\n      var a = engine() >>> 0;\n      var b = engine() | 0;\n      var c = engine() | 0;\n      var d = engine() >>> 0;\n\n      return (\n        zeroPad(a.toString(16), 8) +\n        \"-\" +\n        zeroPad((b & 0xffff).toString(16), 4) +\n        \"-\" +\n        zeroPad((((b >> 4) & 0x0fff) | 0x4000).toString(16), 4) +\n        \"-\" +\n        zeroPad(((c & 0x3fff) | 0x8000).toString(16), 4) +\n        \"-\" +\n        zeroPad(((c >> 4) & 0xffff).toString(16), 4) +\n        zeroPad(d.toString(16), 8));\n    };\n  }());\n  proto.uuid4 = function () {\n    return Random.uuid4(this.engine);\n  };\n\n  Random.string = (function () {\n    // has 2**x chars, for faster uniform distribution\n    var DEFAULT_STRING_POOL = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-\";\n\n    return function (pool) {\n      if (pool == null) {\n        pool = DEFAULT_STRING_POOL;\n      }\n\n      var length = pool.length;\n      if (!length) {\n        throw new Error(\"Expected pool not to be an empty string\");\n      }\n\n      var distribution = Random.integer(0, length - 1);\n      return function (engine, length) {\n        var result = \"\";\n        for (var i = 0; i < length; ++i) {\n          var j = distribution(engine);\n          result += pool.charAt(j);\n        }\n        return result;\n      };\n    };\n  }());\n  proto.string = function (length, pool) {\n    return Random.string(pool)(this.engine, length);\n  };\n\n  Random.hex = (function () {\n    var LOWER_HEX_POOL = \"0123456789abcdef\";\n    var lowerHex = Random.string(LOWER_HEX_POOL);\n    var upperHex = Random.string(LOWER_HEX_POOL.toUpperCase());\n\n    return function (upper) {\n      if (upper) {\n        return upperHex;\n      } else {\n        return lowerHex;\n      }\n    };\n  }());\n  proto.hex = function (length, upper) {\n    return Random.hex(upper)(this.engine, length);\n  };\n\n  Random.date = function (start, end) {\n    if (!(start instanceof Date)) {\n      throw new TypeError(\"Expected start to be a Date, got \" + typeof start);\n    } else if (!(end instanceof Date)) {\n      throw new TypeError(\"Expected end to be a Date, got \" + typeof end);\n    }\n    var distribution = Random.integer(start.getTime(), end.getTime());\n    return function (engine) {\n      return new Date(distribution(engine));\n    };\n  };\n  proto.date = function (start, end) {\n    return Random.date(start, end)(this.engine);\n  };\n\n  if (typeof define === \"function\" && define.amd) {\n    define(function () {\n      return Random;\n    });\n  } else if (typeof module !== \"undefined\" && typeof require === \"function\") {\n    module.exports = Random;\n  } else {\n    (function () {\n      var oldGlobal = root[GLOBAL_KEY];\n      Random.noConflict = function () {\n        root[GLOBAL_KEY] = oldGlobal;\n        return this;\n      };\n    }());\n    root[GLOBAL_KEY] = Random;\n  }\n}(this));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/random-js/lib/random.js\n// module id = 1\n// module chunks = 0","import * as Geom from './geom';\n\nlet currMesh: Geom.Mesh|undefined\nlet currMeshType: Geom.MeshType|undefined\n\nfunction selectMeshHandler(this: HTMLElement, ev: Event) {\n    selectMesh(<Geom.MeshType>(<HTMLSelectElement>this).value)\n}\n\nlet meshSVG: SVGSVGElement;\nlet arrowLayer: SVGGElement|undefined;\nlet arrowOrigin: Geom.Vec2|null = null;\nlet arrowTarget: Geom.Vec2|null = null;\nlet pathLayer: SVGGElement|undefined;\n\nfunction selectMesh(meshType: Geom.MeshType) {\n    if (currMeshType && meshType == currMeshType) {\n        return\n    }\n\n    document.getElementById(\"status-div\")!.innerHTML = ''\n    document.getElementById(\"select-mesh\")!.classList.remove(\"warning\")\n    document.getElementById(\"select-walk\")!.classList.remove(\"warning\")\n    if (currWalkType == \"Visibility\" && (meshType != \"Delaunay\")) {\n        document.getElementById(\"status-div\")!.innerHTML = '<span class=\"warning\">This combination may loop!</span>'\n        document.getElementById(\"select-walk\")!.classList.add(\"warning\")\n    }\n\n    currMeshType = <Geom.MeshType>meshType\n    currMesh = Geom.randomMesh(currMeshType)\n    let meshDIV = document.getElementById(\"mesh-div\")!\n    meshDIV.innerHTML = Geom.mesh2svg(currMesh)\n\n    meshSVG = document.getElementById(\"mesh-svg\")! as any as SVGSVGElement\n\n    meshSVG.addEventListener(\"click\", meshClickHandler)\n\n    arrowLayer = document.getElementById(\"arrow-layer\")! as any as SVGGElement\n    pathLayer = document.getElementById(\"path-layer\")! as any as SVGGElement\n\n    arrowOrigin = null\n    arrowTarget = null\n    currPathInitFace = null\n    currWalkStats = null\n}\n\nfunction meshSVGEventPos(evt: MouseEvent): Geom.Vec2 {\n    if (!meshSVG) {\n        return { x: 0, y: 0 }\n    }\n    let x = evt.clientX\n    let y = evt.clientY\n    let sm = meshSVG.getScreenCTM()!.inverse() // TODO: handle properly the fact that getScreenCTM can return null\n    return { x: Math.round((sm.a * x)+(sm.c*y)+sm.e), y: Math.round((sm.b*x)+(sm.d*y)+sm.f) }\n}\n\nlet currPathInitFace: Geom.Face|null = null\nlet currWalkStats: Geom.WalkStats|null = null\n\nfunction updatePath() {\n    if (currPathInitFace === null || arrowOrigin === null || arrowTarget === null || currWalkType == undefined) {\n        return\n    }\n    currWalkStats = Geom.walkStats(currWalkType, currPathInitFace.some, arrowOrigin, arrowTarget)\n    drawPath()\n}\n\nfunction meshClickHandler(this: HTMLElement, ev: Event) {\n    const mev = <MouseEvent>ev\n    if (arrowOrigin === null || arrowTarget !== null) {\n        arrowOrigin = meshSVGEventPos(mev)\n        if (currMesh) {\n            currPathInitFace = Geom.walk(currMesh.north, arrowOrigin)\n        }\n        arrowTarget = null\n        currWalkStats = null\n    } else {\n        arrowTarget = meshSVGEventPos(mev)\n        if (currPathInitFace !== null) {\n            updatePath()\n        }\n    }\n    drawArrow()\n    drawPath()\n}\n\nfunction drawPath() {\n    if (!pathLayer) {\n        return\n    }\n    let statusLine = \"\"\n    let lines: string[] = []\n    if (currPathInitFace !== null) {\n        lines.push(Geom.face2svg(currPathInitFace, \"path-face\"))\n    }\n    if (currWalkStats !== null) {\n        const currPath = currWalkStats.path\n        currPath.forEach((e) => {\n            if (e.left !== currPathInitFace) {\n                const p1 = e.origin.pos\n                const p2 = e.target.pos\n                lines.push('<line x1=\"' + p1.x + '\" y1=\"' + p1.y + '\" x2=\"' + p2.x + '\" y2=\"' + p2.y + '\" class=\"path-edge\"/>')\n                lines.push(Geom.face2svg(e.left, \"path-face\"))\n            }\n        })\n        statusLine = `Faces:&nbsp;<span class=\"facecount\">${currPath.length}</span>, Orientation Tests:&nbsp;<span class=\"orientcount\">${currWalkStats.orient_tests}</span>`\n    }\n    pathLayer.innerHTML = lines.join(\"\\n\")\n    document.getElementById(\"status-div\")!.innerHTML = statusLine\n}\n\nfunction drawArrow() {\n    if (!arrowLayer) {\n        return\n    }\n    let lines: string[] = []\n    if (arrowOrigin !== null) {\n        lines.push('<circle cx=\"' + arrowOrigin.x + '\" cy=\"' + arrowOrigin.y + '\" r=\"5\" id=\"arrow-origin\"/>')\n        if (arrowTarget !== null) {\n            lines.push('<line x1=\"' + arrowOrigin.x + '\" y1=\"' + arrowOrigin.y + '\" x2=\"' + arrowTarget.x + '\" y2=\"' + arrowTarget.y + '\" id=\"arrow\" marker-end=\"url(#arrow-head)\"/>')\n        }\n    }\n    arrowLayer.innerHTML = lines.join(\"\\n\")\n}\n\nlet currWalkType: Geom.WalkType|undefined\n\nfunction selectWalkHandler(this: HTMLElement, ev: Event) {\n    selectWalk(<Geom.WalkType>(<HTMLSelectElement>this).value)\n}\n\nfunction selectWalk(walkType: Geom.WalkType) {\n    if (currWalkType && walkType == currWalkType) {\n        return\n    }\n    document.getElementById(\"status-div\")!.innerHTML = ''\n    document.getElementById(\"select-mesh\")!.classList.remove(\"warning\")\n    document.getElementById(\"select-walk\")!.classList.remove(\"warning\")\n    if (walkType == \"Visibility\" && (currMeshType != \"Delaunay\")) {\n        document.getElementById(\"status-div\")!.innerHTML = '<span class=\"warning\">This combination may loop!</span>'\n        document.getElementById(\"select-mesh\")!.classList.add(\"warning\")\n    }\n    currWalkType = <Geom.WalkType>walkType\n    updatePath()\n}\n\ndocument.getElementById(\"select-mesh\")!.addEventListener(\"change\", selectMeshHandler);\ndocument.getElementById(\"select-walk\")!.addEventListener(\"change\", selectWalkHandler);\n\nselectMesh(<Geom.MeshType>(<HTMLSelectElement>(document.getElementById(\"select-mesh\")!)).value);\nselectWalk(<Geom.WalkType>(<HTMLSelectElement>(document.getElementById(\"select-walk\")!)).value);\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","import * as Geom from './geom';\nimport * as Random from 'random-js';\n\ntype Cell = { x: number, y: number, width: number, height: number, inside: boolean }\n\ntype Edge = { origin: Vertex, target: Vertex }\ntype Vertex = { pos: Geom.Vec2, incoming: Set<Edge>, outgoing: Set<Edge> }\ntype Floorplan = { edges: Set<Edge>, vertices: Set<Vertex> }\n\nconst seedRandom = Random.engines.nativeMath\n\n// we like: [ 327293021, 1315541527 ]\n// problematic fillets: [ -1818373956, 310693458 ]\n\n/*\nconst loopingSeeds: { [key: string]: boolean} = {}\nconst failingSeeds: { [key: string]: boolean} = {}\n\nlet n = 0\nwhile (true) {\n    n++\n    let seedArray: [number, number]\n    do {\n        seedArray = [seedRandom(), seedRandom()]\n    } while (failingSeeds[`${seedArray}`]||loopingSeeds[`${seedArray}`])\n    const random = new Random(Random.engines.mt19937().seedWithArray(seedArray));\n    try {\n        console.log(`iteration ${n}: generating with seed: ${seedArray}`)\n        randomFloorplan(random);\n    } catch (e) {\n        console.log(`exception for seed: ${seedArray}`)\n        throw e\n    }\n}\n*/\n/*\nfor (let seedArrayString in failingSeeds) {\n    const seedArray: number[] = seedArrayString.split(\",\").map(parseInt)\n    const random = new Random(Random.engines.mt19937().seedWithArray(seedArray))\n    randomFloorplan(random)\n}*/\n\n//const seedArray = [seedRandom(), seedRandom()]\n//console.log(seedArray)\n//const random = new Random(Random.engines.mt19937().seedWithArray(seedArray))\n\nexport function randomFloorplanMesh(random: Random, sprinkle: boolean): Geom.Mesh {\n    const floorplan1 = randomFloorplan(random)\n    const floorplan2 = randomFloorplan(random)\n    const angle2 = random.real((30/180)*Math.PI, (60/180)*Math.PI)\n    rotateFloorplan(floorplan2, angle2)\n    const interAxisRadius = random.real(10000, 12000)\n    const interAxisAngle = \n        random.pick([(45/180)*Math.PI, (135/180)*Math.PI, (225/180)*Math.PI, (315/180)*Math.PI]) \n        + random.real((-10/180)*Math.PI, (10/180)*Math.PI)\n    const delta1 = { x: Math.cos(interAxisAngle) * interAxisRadius, y: Math.sin(interAxisAngle) * interAxisRadius}\n    translateFloorplan(floorplan1, delta1)\n    const delta2 = Geom.mult(delta1, -1)\n    translateFloorplan(floorplan2, delta2)\n    const m = floorplans2mesh([floorplan1, floorplan2])\n    if (sprinkle) {\n        const edges = Geom.gatherEdges(m)\n        const waitingList: Geom.Edge[] = []\n        edges.forEach((ee) => {waitingList.push(ee)})\n        while (waitingList.length > 0) {\n            const ee = waitingList.pop()!\n            const e = ee.half\n            if (ee.constrained && e.twin && Geom.edgeLength(ee) > 3000) {\n                const v = Geom.splitEdgeApproximately(e, Geom.mult(Geom.plus(e.origin.pos, e.target.pos), .5))\n                waitingList.push(Geom.connected(e.origin, v)!)\n                waitingList.push(Geom.connected(v, e.target)!)\n            }\n        }\n        Geom.floodFill(m)\n        let e = m.north\n        for (let x = -30000; x <= 30000; x += 1500) {\n            for (let y = -30000; y <= 30000; y += 1500) {\n                const p = { x: x + random.integer(-400,400), y: y + random.integer(-400,400) }\n                const f = Geom.walk(e, p)\n                e = f.some\n                if (f.filled) {\n                    Geom.insertVertexFromEdge(e, p)\n                }\n            }\n        }\n    }\n    Geom.delaunafy(m)\n    return m\n}\n\nfunction randomFloorplan(random: Random): Floorplan {\n    const dim = 6\n    const size = 30000\n    const lines = randomLines(random, dim, size)\n    const bites = 4\n    const pattern = randomPattern(random, dim, bites)\n    const floorplan = makeFloorplan(dim, lines, pattern)\n    simplifyFloorplan(floorplan)\n    const desiredFillets = 1\n    let createdFillets = 0\n    let tries = 0\n    const maxTries = desiredFillets * 2\n    while (tries < maxTries && createdFillets < desiredFillets) {\n        const corners = gatherStraightCorners(floorplan)\n        if (corners.length == 0) {\n            break\n        }\n        random.shuffle(corners)\n        const corner = corners[0]\n        if (filletStraightCorner(floorplan, corner)) {\n            createdFillets++\n        }\n        tries++\n    }\n    return floorplan\n}\n\nfunction floorplan2mesh(floorplan: Floorplan): Geom.Mesh {\n    return floorplans2mesh([floorplan])\n}\n\nfunction floorplans2mesh(floorplans: Floorplan[]): Geom.Mesh {\n    const m: Geom.Mesh = Geom.mesh()\n    floorplans.forEach((floorplan) => {\n        floorplan.edges.forEach((e) => {\n            Geom.draw(m, { p1: Geom.roundVec2(e.origin.pos), p2: Geom.roundVec2(e.target.pos) }, true, false)\n        })\n    })\n    Geom.delaunafy(m)\n    Geom.floodFill(m)\n    return m\n}\n\nfunction cells2html(cells: Cell[][]): string {\n    return `<html>\n    <head>\n        <title>Floorplan</title>\n    </head>\n    <style>\n    html, body {\n        height: 100%;\n    }\n    #floorplan-div {\n        height: 100%;\n        min-height: 100%;\n\t    display: flex;\n\t    flex-direction: column;\n    }\n    #floorplan-svg {\n        display: flex;\n\t\tflex-direction: column;\n        justify-content: center;\n    }\n    .floorplan-line {\n        font-size: 12px;\n        stroke-width:1;\n        stroke:rgb(0,0,0);\n    }\n    .floorplan-inside {\n        stroke:rgb(0,0,0);\n        stroke-width:100;\n        fill:rgb(0,0,180);\n    }\n    .floorplan-outside {\n        fill:rgb(255,255,255);\n    }    \n    </style>\n  </head>\n  <body>\n    <div id=\"floorplan-div\">\n      ${cells2svg(cells)}\n    </div>\n  </body>\n</html>`\n}\n\nfunction cells2svg(cells: Cell[][]): string {\n    return `<svg viewBox=\"-20000 -20000 40000 40000\" preserveAspectRatio=\"xMidYMid meet\" xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" id=\"floorplan-svg\">\n    <defs>\n    </defs>\n    <g id=\"walls-layer\">\n    </g>\n    <g id=\"solid-layer\">\n        ${cells2svgSolid(cells)}\n    </g>\n</svg>`\n}\n\nfunction rotateFloorplan(floorplan: Floorplan, angle: number) {\n    floorplan.vertices.forEach((vertex) => {\n        const p = vertex.pos\n        vertex.pos = {\n            x: p.x * Math.cos(angle) - p.y * Math.sin(angle),\n            y: p.x * Math.sin(angle) + p.y * Math.cos(angle)\n        }\n    })\n}\n\nfunction translateFloorplan(floorplan: Floorplan, delta: Geom.Vec2) {\n    floorplan.vertices.forEach((vertex) => {\n        const p = vertex.pos\n        vertex.pos = Geom.plus(vertex.pos, delta)\n    })\n}\n\nfunction cells2svgSolid(cells: Cell[][]): string {\n    const lines: string[] = []\n    cells.forEach((column: Cell[]) => {\n        column.forEach((cell: Cell) => {\n            let clss = \"floorplan-outside\"\n            if (cell.inside) {\n                clss = \"floorplan-inside\"\n            }\n            lines.push(`<rect class=\"${clss}\" width=\"${cell.width}\" height=\"${cell.height}\" x=\"${cell.x}\" y=\"${cell.y}\"/>`)\n        })\n    })\n    return lines.join(\"\\n\")\n}\n\nfunction gatherStraightCorners(floorplan: Floorplan): [Edge, Edge][] {\n    const corners: [Edge, Edge][] = []\n    floorplan.edges.forEach((ie) => {\n        if (ie.target.outgoing.size != 1) {\n            return\n        }\n        ie.target.outgoing.forEach((oe) => {\n            if (ie.origin.pos.x == ie.target.pos.x) {\n                if (oe.origin.pos.y == oe.target.pos.y) {\n                    if ((ie.origin.pos.y < ie.target.pos.y && oe.origin.pos.x > oe.target.pos.x)\n                        || (ie.origin.pos.y > ie.target.pos.y && oe.origin.pos.x < oe.target.pos.x)) {\n                        corners.push([ie, oe])\n                    }\n                }\n            } else if (ie.origin.pos.y == ie.target.pos.y) {\n                if (oe.origin.pos.x == oe.target.pos.x) {\n                    if ((ie.origin.pos.x < ie.target.pos.x && oe.origin.pos.y < oe.target.pos.y)\n                        || (ie.origin.pos.x > ie.target.pos.x && oe.origin.pos.y > oe.target.pos.y)) {\n                        corners.push([ie, oe])\n                    }\n                }\n            }\n        })\n    })\n    return corners\n}\n\nfunction filletStraightCorner(floorplan: Floorplan, corner: [Edge, Edge]): boolean {\n    const [ie, oe] = corner\n    const m = floorplan2mesh(floorplan)\n    const gieorigin = Geom.walkToClosestVertex(m.north, ie.origin.pos)\n    if (!Geom.pointsCoincide(gieorigin.pos, ie.origin.pos)) {\n        return false\n    }\n    let gie = Geom.pivot(gieorigin, ie.target.pos)\n    if (!Geom.pointsCoincide(gie.origin.pos, ie.origin.pos) ||\n        !Geom.pointsCoincide(gie.target.pos, ie.target.pos)) {\n        return false\n    }\n    const goeorigin = Geom.walkToClosestVertex(m.north, oe.origin.pos)\n    if (!Geom.pointsCoincide(goeorigin.pos, oe.origin.pos)) {\n        return false\n    }\n    let goe = Geom.pivot(goeorigin, oe.target.pos)\n    if (!Geom.pointsCoincide(goe.origin.pos, oe.origin.pos) ||\n        !Geom.pointsCoincide(goe.target.pos, oe.target.pos)) {\n        return false\n    }\n    const giel = Geom.halfEdgeLength(gie)\n    const goel = Geom.halfEdgeLength(goe)\n    const radius = Math.min(giel, goel)\n    let stepAngle = Math.PI / 8\n    for (let c = 0; c < 6; c++) {\n        if ((stepAngle * radius) < 2000) {\n            break\n        }\n        stepAngle = stepAngle / 2\n    }\n    const angleEpsilon = stepAngle / 65536\n    let startAngle = stepAngle\n    let endAngle = (Math.PI / 2) - stepAngle\n    let center: Geom.Vec2\n    let needle: Geom.Vec2\n    let coneedle: Geom.Vec2\n\n    if (giel <= goel) {\n        center = Geom.plus(gie.origin.pos, Geom.rotateLeft(Geom.halfEdgeDelta(gie)))\n        coneedle = Geom.minus(gie.origin.pos, center)\n        needle = Geom.rotateLeft(coneedle)\n        if (giel != goel) {\n            startAngle -= stepAngle\n            const newoetargetpos = Geom.roundVec2(Geom.plus(center, needle))\n            const newoetarget = Geom.insertVertex(m, newoetargetpos)\n            if (!Geom.pointsCoincide(newoetarget.pos, newoetargetpos)) {\n                return false\n            }\n            goe = Geom.pivot(goe.origin, newoetargetpos)\n            if (!Geom.pointsCoincide(goe.origin.pos, oe.origin.pos) ||\n                !Geom.pointsCoincide(goe.target.pos, newoetargetpos)) {\n                return false\n            }\n        }\n    } else {\n        center = Geom.plus(goe.target.pos, Geom.rotateLeft(Geom.halfEdgeDelta(goe)))\n        endAngle += stepAngle\n        needle = Geom.minus(goe.target.pos, center)\n        coneedle = Geom.rotateRight(needle)\n        const newieoriginpos = Geom.roundVec2(Geom.plus(center, coneedle))\n        const newieorigin = Geom.insertVertex(m, newieoriginpos)\n        if (!Geom.pointsCoincide(newieorigin.pos, newieoriginpos)) {\n            return false\n        }\n        gie = Geom.pivot(newieorigin, ie.target.pos)\n        if (!Geom.pointsCoincide(gie.origin.pos, newieoriginpos) ||\n            !Geom.pointsCoincide(gie.target.pos, ie.target.pos)) {\n            return false\n        }\n    }\n    if (!gie.edge.constrained || !goe.edge.constrained) {\n        return false\n    }\n    try {\n        Geom.flipToConnectVertices(gie.origin, goe.target)\n    }\n    catch (e) {\n        if (!e.message || (e.message != \"intersecting existing vertex\" && e.message != \"intersecting constrained edge\")) {\n            throw e\n        }\n    }\n    Geom.floodFill(m)\n    if (!gie.left.filled || !gie.twin || gie.twin.left.filled) {\n        return false\n    }\n    if (goe.next.next != gie || !goe.twin || goe.twin.left.filled) {\n        return false\n    }\n    const filletPoints: Geom.Vec2[] = []\n    for (let angle = startAngle; ((endAngle - angle) > -angleEpsilon); angle += stepAngle) {\n        filletPoints.push(Geom.plus(Geom.plus(center, Geom.mult(needle, Math.sin(angle))), Geom.mult(coneedle, Math.cos(angle))))\n    }\n    // remove the corner (including, possibly, the vertex)\n    removeEdge(floorplan, ie)\n    removeEdge(floorplan, oe)\n    if (ie.target.incoming.size == 0 && ie.target.outgoing.size == 0) {\n        floorplan.vertices.delete(ie.target)\n    }\n    // substitute with the fillet\n    let currVertex = ie.origin\n    filletPoints.forEach((p) => {\n        const nextVertex = newVertex(floorplan, p)\n        if (!Geom.pointsCoincide(currVertex.pos, nextVertex.pos)) {\n            newEdge(floorplan, currVertex, nextVertex)\n        }\n        currVertex = nextVertex\n    })\n    if (!Geom.pointsCoincide(currVertex.pos, oe.target.pos)) {\n        newEdge(floorplan, currVertex, oe.target)\n    }\n    return true\n}\n\nfunction newFloorplan(): Floorplan {\n    return { edges: new Set(), vertices: new Set() }\n}\n\nfunction newVertex(floorplan: Floorplan, p: Geom.Vec2): Vertex {\n    const vertex: Vertex = { pos: p, incoming: new Set(), outgoing: new Set() }\n    floorplan.vertices.add(vertex)\n    return vertex\n}\n\nfunction newEdge(floorplan: Floorplan, origin: Vertex, target: Vertex) {\n    if (Geom.pointsCoincide(origin.pos, target.pos)) {\n        throw \"origin and target coincide\"\n    }\n    const edge = { origin: origin, target: target }\n    floorplan.edges.add(edge)\n    origin.outgoing.add(edge)\n    target.incoming.add(edge)\n}\n\nfunction removeEdge(floorplan: Floorplan, e: Edge) {\n    e.origin.outgoing.delete(e)\n    e.target.incoming.delete(e)\n    floorplan.edges.delete(e)\n}\n\nfunction simplifyFloorplan(floorplan: Floorplan) {\n    const waitingList: Vertex[] = []\n    const waitingSet: Set<Vertex> = new Set()\n    function scheduleVertex(v: Vertex) {\n        if (!waitingSet.has(v)) {\n            waitingList.push(v); waitingSet.add(v)\n        }\n    }\n    floorplan.vertices.forEach((v) => { scheduleVertex(v) })\n    while (waitingList.length > 0) {\n        const vertex = waitingList.pop()!\n        waitingSet.delete(vertex)\n        const colinearPairs: [Edge, Edge][] = []\n        vertex.incoming.forEach((ie) => {\n            vertex.outgoing.forEach((oe) => {\n                if (Geom.orient(ie.origin.pos, vertex.pos, oe.target.pos) == 0) {\n                    colinearPairs.push([ie, oe])\n                }\n            })\n        })\n        colinearPairs.forEach((pair) => {\n            const [ie, oe] = pair\n            removeEdge(floorplan, ie)\n            removeEdge(floorplan, oe)\n            newEdge(floorplan, ie.origin, oe.target)\n            scheduleVertex(ie.origin)\n            scheduleVertex(oe.target)\n        })\n        if (vertex.incoming.size == 0 && vertex.outgoing.size == 0) {\n            floorplan.vertices.delete(vertex)\n        }\n    }\n\n}\n\nfunction makeFloorplan(dim: number, lines: [number[], number[]], pattern: boolean[][]): Floorplan {\n    const [hor, ver] = lines\n    const floorplan = newFloorplan()\n    const vertexGrid: Vertex[][] = []\n    for (let h = 0; h <= dim; h++) {\n        const column: Vertex[] = []\n        vertexGrid.push(column)\n        for (let v = 0; v <= dim; v++) {\n            const vertex = newVertex(floorplan, { x: hor[h], y: ver[v] })\n            column.push(vertex)\n        }\n    }\n    for (let h = 0; h < dim; h++) {\n        for (let v = 0; v < dim; v++) {\n            if (!pattern[h][v]) {\n                continue\n            }\n            if (v == 0 || !(pattern[h][v - 1])) {\n                newEdge(floorplan, vertexGrid[h][v], vertexGrid[h + 1][v])\n            }\n            if (h == dim - 1 || !(pattern[h + 1][v])) {\n                newEdge(floorplan, vertexGrid[h + 1][v], vertexGrid[h + 1][v + 1])\n            }\n            if (v == dim - 1 || !(pattern[h][v + 1])) {\n                newEdge(floorplan, vertexGrid[h + 1][v + 1], vertexGrid[h][v + 1])\n            }\n            if (h == 0 || !(pattern[h - 1][v])) {\n                newEdge(floorplan, vertexGrid[h][v + 1], vertexGrid[h][v])\n            }\n        }\n    }\n    return floorplan\n}\n\nfunction makeCells(dim: number, lines: [number[], number[]], pattern: boolean[][]): Cell[][] {\n    const [hor, ver] = lines\n    const cells: Cell[][] = []\n    for (let h = 0; h < dim; h++) {\n        const column: Cell[] = []\n        cells.push(column)\n        for (let v = 0; v < dim; v++) {\n            const cell = {\n                x: hor[h], y: ver[v],\n                width: hor[h + 1] - hor[h], height: ver[v + 1] - ver[v],\n                inside: pattern[h][v]\n            }\n            column.push(cell)\n        }\n    }\n    return cells\n}\n\nfunction randomPattern(random: Random, dim: number, bites: number): boolean[][] {\n    if (dim < 6) {\n        throw Error(\"dim must be 6 or greater\")\n    }\n    const pattern: boolean[][] = []\n    for (let h = 0; h < dim; h++) {\n        const column: boolean[] = []\n        pattern.push(column)\n        for (let v = 0; v < dim; v++) {\n            column.push(true)\n        }\n    }\n    for (let b = 0; b < bites; b++) {\n        let h: number\n        let v: number\n        if (random.bool()) {\n            // pick a corner\n            if (random.bool()) { h = 0 } else { h = dim - 1 }\n            if (random.bool()) { v = 0 } else { v = dim - 1 }\n        } else if (random.bool()) {\n            // pick a sidepoint\n            if (random.bool()) {\n                // top or bottom\n                if (random.bool()) {\n                    // top\n                    v = 0; h = 2 + random.integer(0, dim - 4)\n                } else {\n                    // bottom\n                    v = dim - 1; h = 2 + random.integer(0, dim - 4)\n                }\n            } else {\n                // left or right\n                if (random.bool()) {\n                    // left\n                    h = 0; v = 2 + random.integer(0, dim - 4)\n                } else {\n                    // right\n                    h = dim - 1; v = 2 + random.integer(0, dim - 4)\n                }\n            }\n        } else {\n            // pick an interior point\n            h = 2 + random.integer(0, dim - 4)\n            v = 2 + random.integer(0, dim - 4)\n        }\n        for (let c = 0; c <= b; c++) {\n            if (h < 0 || h > dim - 1 || v < 0 || v > dim - 1) {\n                break\n            }\n            if (!pattern[h][v]) {\n                break\n            }\n            pattern[h][v] = false\n            // step hor or ver\n            if (random.bool()) {\n                if (random.bool()) { h -= 1 } else { h += 1 }\n            } else {\n                if (random.bool()) { v -= 1 } else { v += 1 }\n            }\n        }\n    }\n    return pattern\n}\n\nfunction randomLines(random: Random, dim: number, size: number): [number[], number[]] {\n    const halfSize = Math.round(size / 2)\n    const horWeights: number[] = []\n    let totHorWeight = 0\n    for (let c = 0; c <= dim; c++) {\n        const weight = random.integer(40, 200)\n        horWeights.push(weight)\n        totHorWeight += weight\n    }\n    const hor: number[] = []\n    let x = -halfSize\n    for (let c = 0; c <= dim; c++) {\n        x += size * (horWeights[c] / totHorWeight)\n        hor.push(Math.round(x))\n    }\n    const verWeights: number[] = []\n    let totVerWeight = 0\n    for (let c = 0; c <= dim; c++) {\n        const weight = horWeights[c] + random.integer(-20, 60)\n        verWeights.push(weight)\n        totVerWeight += weight\n    }\n    const ver: number[] = []\n    let y = -halfSize\n    for (let c = 0; c <= dim; c++) {\n        y += size * (verWeights[c] / totVerWeight)\n        ver.push(Math.round(y))\n    }\n    return [hor, ver]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/floorplan.ts"],"sourceRoot":""}